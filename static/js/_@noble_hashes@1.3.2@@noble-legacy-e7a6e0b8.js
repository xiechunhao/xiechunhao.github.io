System.register([],(function(t,e){"use strict";return{execute:function(){function e(t){if(!Number.isSafeInteger(t)||t<0)throw new Error(`Wrong positive integer: ${t}`)}function s(t,...e){if(!(t instanceof Uint8Array))throw new Error("Expected Uint8Array");if(e.length>0&&!e.includes(t.length))throw new Error(`Expected Uint8Array of length ${e}, not of length=${t.length}`)}function i(t,e=!0){if(t.destroyed)throw new Error("Hash instance has been destroyed");if(e&&t.finished)throw new Error("Hash#digest() has already been called")}function n(t,e){s(t);const i=e.outputLen;if(t.length<i)throw new Error(`digestInto() expects output buffer of length at least ${i}`)}t({c:function(...t){const e=new Uint8Array(t.reduce(((t,e)=>t+e.length),0));let s=0;return t.forEach((t=>{if(!r(t))throw new Error("Uint8Array expected");e.set(t,s),s+=t.length})),e},r:function(t=32){if(o&&"function"==typeof o.getRandomValues)return o.getRandomValues(new Uint8Array(t));throw new Error("crypto.getRandomValues must be defined")}});const o="object"==typeof globalThis&&"crypto"in globalThis?globalThis.crypto:void 0,r=t=>t instanceof Uint8Array,h=t=>new DataView(t.buffer,t.byteOffset,t.byteLength),u=(t,e)=>t<<32-e|t>>>e;/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */if(68!==new Uint8Array(new Uint32Array([287454020]).buffer)[0])throw new Error("Non little-endian hardware is not supported");function f(t){if("string"==typeof t&&(t=function(t){if("string"!=typeof t)throw new Error("utf8ToBytes expected string, got "+typeof t);return new Uint8Array((new TextEncoder).encode(t))}(t)),!r(t))throw new Error("expected Uint8Array, got "+typeof t);return t}class c{clone(){return this._cloneInto()}}function a(t){const e=e=>t().update(f(e)).digest(),s=t();return e.outputLen=s.outputLen,e.blockLen=s.blockLen,e.create=()=>t(),e}class l extends c{constructor(t,s){super(),this.finished=!1,this.destroyed=!1,function(t){if("function"!=typeof t||"function"!=typeof t.create)throw new Error("Hash should be wrapped by utils.wrapConstructor");e(t.outputLen),e(t.blockLen)}(t);const i=f(s);if(this.iHash=t.create(),"function"!=typeof this.iHash.update)throw new Error("Expected instance of class which extends utils.Hash");this.blockLen=this.iHash.blockLen,this.outputLen=this.iHash.outputLen;const n=this.blockLen,o=new Uint8Array(n);o.set(i.length>n?t.create().update(i).digest():i);for(let e=0;e<o.length;e++)o[e]^=54;this.iHash.update(o),this.oHash=t.create();for(let e=0;e<o.length;e++)o[e]^=106;this.oHash.update(o),o.fill(0)}update(t){return i(this),this.iHash.update(t),this}digestInto(t){i(this),s(t,this.outputLen),this.finished=!0,this.iHash.digestInto(t),this.oHash.update(t),this.oHash.digestInto(t),this.destroy()}digest(){const t=new Uint8Array(this.oHash.outputLen);return this.digestInto(t),t}_cloneInto(t){t||(t=Object.create(Object.getPrototypeOf(this),{}));const{oHash:e,iHash:s,finished:i,destroyed:n,blockLen:o,outputLen:r}=this;return t.finished=i,t.destroyed=n,t.blockLen=o,t.outputLen=r,t.oHash=e._cloneInto(t.oHash),t.iHash=s._cloneInto(t.iHash),t}destroy(){this.destroyed=!0,this.oHash.destroy(),this.iHash.destroy()}}const d=t("h",((t,e,s)=>new l(t,e).update(s).digest()));d.create=(t,e)=>new l(t,e);class p extends c{constructor(t,e,s,i){super(),this.blockLen=t,this.outputLen=e,this.padOffset=s,this.isLE=i,this.finished=!1,this.length=0,this.pos=0,this.destroyed=!1,this.buffer=new Uint8Array(t),this.view=h(this.buffer)}update(t){i(this);const{view:e,buffer:s,blockLen:n}=this,o=(t=f(t)).length;for(let i=0;i<o;){const r=Math.min(n-this.pos,o-i);if(r!==n)s.set(t.subarray(i,i+r),this.pos),this.pos+=r,i+=r,this.pos===n&&(this.process(e,0),this.pos=0);else{const e=h(t);for(;n<=o-i;i+=n)this.process(e,i)}}return this.length+=t.length,this.roundClean(),this}digestInto(t){i(this),n(t,this),this.finished=!0;const{buffer:e,view:s,blockLen:o,isLE:r}=this;let{pos:u}=this;e[u++]=128,this.buffer.subarray(u).fill(0),this.padOffset>o-u&&(this.process(s,0),u=0);for(let i=u;i<o;i++)e[i]=0;!function(t,e,s,i){if("function"==typeof t.setBigUint64)return t.setBigUint64(e,s,i);const n=BigInt(32),o=BigInt(4294967295),r=Number(s>>n&o),h=Number(s&o),u=i?4:0,f=i?0:4;t.setUint32(e+u,r,i),t.setUint32(e+f,h,i)}(s,o-8,BigInt(8*this.length),r),this.process(s,0);const f=h(t),c=this.outputLen;if(c%4)throw new Error("_sha2: outputLen should be aligned to 32bit");const a=c/4,l=this.get();if(a>l.length)throw new Error("_sha2: outputLen bigger than state");for(let i=0;i<a;i++)f.setUint32(4*i,l[i],r)}digest(){const{buffer:t,outputLen:e}=this;this.digestInto(t);const s=t.slice(0,e);return this.destroy(),s}_cloneInto(t){t||(t=new this.constructor),t.set(...this.get());const{blockLen:e,buffer:s,length:i,finished:n,destroyed:o,pos:r}=this;return t.length=i,t.pos=r,t.finished=n,t.destroyed=o,i%e&&t.buffer.set(s),t}}const g=(t,e,s)=>t&e^t&s^e&s,w=new Uint32Array([1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298]),y=new Uint32Array([1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225]),b=new Uint32Array(64);class L extends p{constructor(){super(64,32,8,!1),this.A=0|y[0],this.B=0|y[1],this.C=0|y[2],this.D=0|y[3],this.E=0|y[4],this.F=0|y[5],this.G=0|y[6],this.H=0|y[7]}get(){const{A:t,B:e,C:s,D:i,E:n,F:o,G:r,H:h}=this;return[t,e,s,i,n,o,r,h]}set(t,e,s,i,n,o,r,h){this.A=0|t,this.B=0|e,this.C=0|s,this.D=0|i,this.E=0|n,this.F=0|o,this.G=0|r,this.H=0|h}process(t,e){for(let u=0;u<16;u++,e+=4)b[u]=t.getUint32(e,!1);for(let l=16;l<64;l++){const t=b[l-15],e=b[l-2],s=u(t,7)^u(t,18)^t>>>3,i=u(e,17)^u(e,19)^e>>>10;b[l]=i+b[l-7]+s+b[l-16]|0}let{A:s,B:i,C:n,D:o,E:r,F:h,G:f,H:c}=this;for(let l=0;l<64;l++){const t=c+(u(r,6)^u(r,11)^u(r,25))+((a=r)&h^~a&f)+w[l]+b[l]|0,e=(u(s,2)^u(s,13)^u(s,22))+g(s,i,n)|0;c=f,f=h,h=r,r=o+t|0,o=n,n=i,i=s,s=t+e|0}var a;s=s+this.A|0,i=i+this.B|0,n=n+this.C|0,o=o+this.D|0,r=r+this.E|0,h=h+this.F|0,f=f+this.G|0,c=c+this.H|0,this.set(s,i,n,o,r,h,f,c)}roundClean(){b.fill(0)}destroy(){this.set(0,0,0,0,0,0,0,0),this.buffer.fill(0)}}t("s",a((()=>new L)));const I=BigInt(2**32-1),k=BigInt(32);function E(t,e=!1){return e?{h:Number(t&I),l:Number(t>>k&I)}:{h:0|Number(t>>k&I),l:0|Number(t&I)}}function U(t,e=!1){let s=new Uint32Array(t.length),i=new Uint32Array(t.length);for(let n=0;n<t.length;n++){const{h:o,l:r}=E(t[n],e);[s[n],i[n]]=[o,r]}return[s,i]}const[A,H,x]=[[],[],[]],O=BigInt(0),B=BigInt(1),m=BigInt(2),F=BigInt(7),C=BigInt(256),N=BigInt(113);for(let t=0,X=B,M=1,V=0;t<24;t++){[M,V]=[V,(2*M+3*V)%5],A.push(2*(5*V+M)),H.push((t+1)*(t+2)/2%64);let e=O;for(let t=0;t<7;t++)X=(X<<B^(X>>F)*N)%C,X&m&&(e^=B<<(B<<BigInt(t))-B);x.push(e)}const[_,v]=U(x,!0),D=(t,e,s)=>s>32?((t,e,s)=>e<<s-32|t>>>64-s)(t,e,s):((t,e,s)=>t<<s|e>>>32-s)(t,e,s),G=(t,e,s)=>s>32?((t,e,s)=>t<<s-32|e>>>64-s)(t,e,s):((t,e,s)=>e<<s|t>>>32-s)(t,e,s);class T extends c{constructor(t,s,i,n=!1,o=24){if(super(),this.blockLen=t,this.suffix=s,this.outputLen=i,this.enableXOF=n,this.rounds=o,this.pos=0,this.posOut=0,this.finished=!1,this.destroyed=!1,e(i),0>=this.blockLen||this.blockLen>=200)throw new Error("Sha3 supports only keccak-f1600 function");var r;this.state=new Uint8Array(200),this.state32=(r=this.state,new Uint32Array(r.buffer,r.byteOffset,Math.floor(r.byteLength/4)))}keccak(){!function(t,e=24){const s=new Uint32Array(10);for(let i=24-e;i<24;i++){for(let i=0;i<10;i++)s[i]=t[i]^t[i+10]^t[i+20]^t[i+30]^t[i+40];for(let i=0;i<10;i+=2){const e=(i+8)%10,n=(i+2)%10,o=s[n],r=s[n+1],h=D(o,r,1)^s[e],u=G(o,r,1)^s[e+1];for(let s=0;s<50;s+=10)t[i+s]^=h,t[i+s+1]^=u}let e=t[2],n=t[3];for(let s=0;s<24;s++){const i=H[s],o=D(e,n,i),r=G(e,n,i),h=A[s];e=t[h],n=t[h+1],t[h]=o,t[h+1]=r}for(let i=0;i<50;i+=10){for(let e=0;e<10;e++)s[e]=t[i+e];for(let e=0;e<10;e++)t[i+e]^=~s[(e+2)%10]&s[(e+4)%10]}t[0]^=_[i],t[1]^=v[i]}s.fill(0)}(this.state32,this.rounds),this.posOut=0,this.pos=0}update(t){i(this);const{blockLen:e,state:s}=this,n=(t=f(t)).length;for(let i=0;i<n;){const o=Math.min(e-this.pos,n-i);for(let e=0;e<o;e++)s[this.pos++]^=t[i++];this.pos===e&&this.keccak()}return this}finish(){if(this.finished)return;this.finished=!0;const{state:t,suffix:e,pos:s,blockLen:i}=this;t[s]^=e,128&e&&s===i-1&&this.keccak(),t[i-1]^=128,this.keccak()}writeInto(t){i(this,!1),s(t),this.finish();const e=this.state,{blockLen:n}=this;for(let s=0,i=t.length;s<i;){this.posOut>=n&&this.keccak();const o=Math.min(n-this.posOut,i-s);t.set(e.subarray(this.posOut,this.posOut+o),s),this.posOut+=o,s+=o}return t}xofInto(t){if(!this.enableXOF)throw new Error("XOF is not possible for this instance");return this.writeInto(t)}xof(t){return e(t),this.xofInto(new Uint8Array(t))}digestInto(t){if(n(t,this),this.finished)throw new Error("digest() was already called");return this.writeInto(t),this.destroy(),t}digest(){return this.digestInto(new Uint8Array(this.outputLen))}destroy(){this.destroyed=!0,this.state.fill(0)}_cloneInto(t){const{blockLen:e,suffix:s,outputLen:i,rounds:n,enableXOF:o}=this;return t||(t=new T(e,s,i,o,n)),t.state32.set(this.state32),t.pos=this.pos,t.posOut=this.posOut,t.finished=this.finished,t.rounds=n,t.suffix=s,t.outputLen=i,t.enableXOF=o,t.destroyed=this.destroyed,t}}t("k",((t,e,s)=>a((()=>new T(e,t,s))))(1,136,32))}}}));
