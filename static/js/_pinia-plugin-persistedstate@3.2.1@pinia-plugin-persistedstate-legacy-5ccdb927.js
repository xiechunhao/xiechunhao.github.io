System.register([],(function(e,t){"use strict";return{execute:function(){function t(e,t){var r;return e="object"==typeof(r=e)&&null!==r?e:Object.create(null),new Proxy(e,{get:(e,r,s)=>"key"===r?Reflect.get(e,r,s):Reflect.get(e,r,s)||Reflect.get(t,r,s)})}function r(e,{storage:t,serializer:r,key:s,debug:n}){try{const n=null==t?void 0:t.getItem(s);n&&e.$patch(null==r?void 0:r.deserialize(n))}catch(o){n&&console.error("[pinia-plugin-persistedstate]",o)}}function s(e,{storage:t,serializer:r,key:s,paths:n,debug:o}){try{const o=Array.isArray(n)?function(e,t){return t.reduce(((t,r)=>{const s=r.split(".");return function(e,t,r){return t.slice(0,-1).reduce(((e,t)=>/^(__proto__)$/.test(t)?{}:e[t]=e[t]||{}),e)[t[t.length-1]]=r,e}(t,s,function(e,t){return t.reduce(((e,t)=>null==e?void 0:e[t]),e)}(e,s))}),{})}(e,n):e;t.setItem(s,r.serialize(o))}catch(i){o&&console.error("[pinia-plugin-persistedstate]",i)}}e("s",function(e={}){return n=>{const{auto:o=!1}=e,{options:{persist:i=o},store:a,pinia:l}=n;if(!i)return;if(!(a.$id in l.state.value)){const e=l._s.get(a.$id.replace("__hot:",""));return void(e&&Promise.resolve().then((()=>e.$persist())))}const u=(Array.isArray(i)?i.map((r=>t(r,e))):[t(i,e)]).map(function(e,t){return r=>{var s;try{const{storage:n=localStorage,beforeRestore:o,afterRestore:i,serializer:a={serialize:JSON.stringify,deserialize:JSON.parse},key:l=t.$id,paths:u=null,debug:c=!1}=r;return{storage:n,beforeRestore:o,afterRestore:i,serializer:a,key:(null!=(s=e.key)?s:e=>e)("string"==typeof l?l:l(t.$id)),paths:u,debug:c}}catch(n){return r.debug&&console.error("[pinia-plugin-persistedstate]",n),null}}}(e,a)).filter(Boolean);a.$persist=()=>{u.forEach((e=>{s(a.$state,e)}))},a.$hydrate=({runHooks:e=!0}={})=>{u.forEach((t=>{const{beforeRestore:s,afterRestore:o}=t;e&&(null==s||s(n)),r(a,t),e&&(null==o||o(n))}))},u.forEach((e=>{const{beforeRestore:t,afterRestore:o}=e;null==t||t(n),r(a,e),null==o||o(n),a.$subscribe(((t,r)=>{s(r,e)}),{detached:!0})}))}}())}}}));
