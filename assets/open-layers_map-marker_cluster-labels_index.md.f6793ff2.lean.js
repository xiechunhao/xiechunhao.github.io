import{A as T,M as k}from"./chunks/index.47495de9.js";import{V as _,c as b,S as L,C as V,a as P,F as f,T as I}from"./chunks/Vector.f72cf874.js";import{aM as R,E as d,k as m,f as N,o as U,aN as z,aO as O,az as Z,g as w,aP as X,M as $,V as G,B as Y}from"./chunks/reproj.50e0d4ab.js";import{V as H}from"./chunks/Vector.0afd591d.js";import{T as j}from"./chunks/TileImage.36abd4f0.js";import{X as J}from"./chunks/XYZ.eaf43adc.js";import{F as K}from"./chunks/FullScreen.9a3e590b.js";import{d as Q,p as W,a3 as ss,D as ns,o as S,c as B,z as r,G as C,B as h,F as as,a as i,M as ls,N as os,_ as ps,O as es}from"./chunks/framework.166469be.js";class ts extends _{constructor(s){super({attributions:s.attributions,wrapX:s.wrapX}),this.resolution=void 0,this.distance=s.distance!==void 0?s.distance:20,this.minDistance=s.minDistance||0,this.interpolationRatio=0,this.features=[],this.geometryFunction=s.geometryFunction||function(n){const a=n.getGeometry();return R(a.getType()=="Point",10),a},this.createCustomCluster_=s.createCluster,this.source=null,this.boundRefresh_=this.refresh.bind(this),this.updateDistance(this.distance,this.minDistance),this.setSource(s.source||null)}clear(s){this.features.length=0,super.clear(s)}getDistance(){return this.distance}getSource(){return this.source}loadFeatures(s,n,a){this.source.loadFeatures(s,n,a),n!==this.resolution&&(this.resolution=n,this.refresh())}setDistance(s){this.updateDistance(s,this.minDistance)}setMinDistance(s){this.updateDistance(this.distance,s)}getMinDistance(){return this.minDistance}setSource(s){this.source&&this.source.removeEventListener(d.CHANGE,this.boundRefresh_),this.source=s,s&&s.addEventListener(d.CHANGE,this.boundRefresh_),this.refresh()}refresh(){this.clear(),this.cluster(),this.addFeatures(this.features)}updateDistance(s,n){const a=s===0?0:Math.min(n,s)/s,p=s!==this.distance||this.interpolationRatio!==a;this.distance=s,this.minDistance=n,this.interpolationRatio=a,p&&this.refresh()}cluster(){if(this.resolution===void 0||!this.source)return;const s=X(),n=this.distance*this.resolution,a=this.source.getFeatures(),p={};for(let e=0,F=a.length;e<F;e++){const t=a[e];if(!(m(t)in p)){const c=this.geometryFunction(t);if(c){const x=c.getCoordinates();N(x,s),U(s,n,s);const v=this.source.getFeaturesInExtent(s).filter(function(M){const u=m(M);return u in p?!1:(p[u]=!0,!0)});this.features.push(this.createCluster(v,s))}}}}createCluster(s,n){const a=[0,0];for(let t=s.length-1;t>=0;--t){const c=this.geometryFunction(s[t]);c?z(a,c.getCoordinates()):s.splice(t,1)}O(a,1/s.length);const p=Z(n),e=this.interpolationRatio,F=new w([a[0]*(1-e)+p[0]*e,a[1]*(1-e)+p[1]*e]);return this.createCustomCluster_?this.createCustomCluster_(F,s):new b({geometry:F,features:s})}}const cs=ts,q=1e4,A=new Array(q),y=45e5;for(let l=0;l<q;++l){const s=[2*y*Math.random()-y,2*y*Math.random()-y];A[l]=new b(new w(s))}const rs=new _({features:A}),o=new cs({distance:40,source:rs}),E={},D=new H({source:o,style:l=>{const s=l.get("features").length;let n=E[s];return n||(n=[new L({image:new V({radius:10,stroke:new P({color:"#fff"}),fill:new f({color:"#3399CC"})}),text:new I({text:s.toString(),fill:new f({color:"#fff"})})})],E[s]=n),n}}),Fs=l=>{var n,a;const s=(n=o==null?void 0:o.getSource())==null?void 0:n.getFeatures();s&&s.length==0&&((a=o==null?void 0:o.getSource())==null||a.addFeatures(A),D.setSource(o),l.addLayer(D))},g=l=>{var n,a;const s=(n=o==null?void 0:o.getSource())==null?void 0:n.getFeatures();s&&s.length!=0&&((a=o==null?void 0:o.getSource())==null||a.clear(),l.removeLayer(D))},ys=l=>(ls("data-v-48f024b8"),l=l(),os(),l),Ds={id:"top"},Cs=ys(()=>r("div",{id:"map"},null,-1)),is=Q({__name:"index",setup(l){let s=null;const n=new j({source:new J({attributions:T,url:k,maxZoom:20})}),a=()=>{s=new $({target:"map",layers:[n,D],view:new G({center:[0,0],minZoom:2,zoom:2}),controls:Y().extend([new K])})},p=()=>{s&&Fs(s)},e=()=>{s&&g(s)};return W(()=>{a(),s&&g(s)}),ss(()=>{s&&(s.dispose(),s=null)}),(F,t)=>{const c=ns("el-button");return S(),B(as,null,[r("div",Ds,[C(c,{type:"primary",onClick:p},{default:h(()=>[i("添加聚合标注")]),_:1}),C(c,{type:"danger",onClick:e},{default:h(()=>[i("移除聚合标注")]),_:1})]),Cs],64)}}});const As=ps(is,[["__scopeId","data-v-48f024b8"]]),us=r("h1",{id:"聚合标注",tabindex:"-1"},[i("聚合标注 "),r("a",{class:"header-anchor",href:"#聚合标注","aria-label":'Permalink to "聚合标注"'},"​")],-1),fs=r("div",{class:"tip custom-block"},[r("p",{class:"custom-block-title"},"TIP"),r("p",null,"聚合标注是在不同地图分辨率下，通过聚合方式展现标注点的一种方法。")],-1),ds=es("",4),qs=JSON.parse('{"title":"聚合标注","description":"","frontmatter":{},"headers":[],"relativePath":"open-layers/map-marker/cluster-labels/index.md","filePath":"open-layers/map-marker/cluster-labels/index.md","lastUpdated":1687683239000}'),ms={name:"open-layers/map-marker/cluster-labels/index.md"},xs=Object.assign(ms,{setup(l){return(s,n)=>(S(),B("div",null,[us,fs,C(As),ds]))}});export{qs as __pageData,xs as default};
