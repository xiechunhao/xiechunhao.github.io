import{_ as s,o as a,c as n,O as l}from"./chunks/framework.57763b9a.js";const A=JSON.parse('{"title":"类型推论和 any 类型","description":"","frontmatter":{},"headers":[],"relativePath":"pro-typescript/grammar/any/index.md","filePath":"pro-typescript/grammar/any/index.md","lastUpdated":1688802289000}'),o={name:"pro-typescript/grammar/any/index.md"},p=l(`<h1 id="类型推论和-any-类型" tabindex="-1">类型推论和 any 类型 <a class="header-anchor" href="#类型推论和-any-类型" aria-label="Permalink to &quot;类型推论和 any 类型&quot;">​</a></h1><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>类型推论和 any 类型</p></div><h2 id="_1-类型推论" tabindex="-1">1. 类型推论 <a class="header-anchor" href="#_1-类型推论" aria-label="Permalink to &quot;1. 类型推论&quot;">​</a></h2><blockquote><p>概念：在 TS 中存在类型推断机制，在没有给变量添加类型注解的情况下，TS 也会给变量提供类型，以下是发生类型推断的几个场景</p></blockquote><ol><li>声明变量并赋值时</li></ol><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> age</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">num</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> age </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">18</span><span style="color:#89DDFF;">;</span></span></code></pre></div><ul><li><ol start="2"><li>决定函数返回值时</li></ol></li></ul><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">add</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">a</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">number</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">b</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">number</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">a</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">b</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h2 id="_2-any-类型" tabindex="-1">2. any 类型 <a class="header-anchor" href="#_2-any-类型" aria-label="Permalink to &quot;2. any 类型&quot;">​</a></h2><ol><li>作用：变量被注解为 <code>any类型</code> 之后，TS 会 <code>忽略类型检查</code>，错误的类型赋值不会报错，也不会有任何提示</li><li>注意：any 的使用越多，程序可能出现的漏洞越多，因此不推荐使用 any 类型，<code>尽量避免使用</code></li></ol><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 下面这些错误都不会提示出来</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> obj</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">any</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">age</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">18</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#A6ACCD;">obj</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">bar </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">100</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#82AAFF;">obj</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> n</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">number</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> obj</span><span style="color:#89DDFF;">;</span></span></code></pre></div><h2 id="_3-总结" tabindex="-1">3. 总结 <a class="header-anchor" href="#_3-总结" aria-label="Permalink to &quot;3. 总结&quot;">​</a></h2><ol><li>开发项目的时候，<code>能省略类型注解的地方就省略</code></li><li>刚学习 TS，建议对<code>所有类型都加上</code>，先熟悉写法</li><li><code>鼠标放只变量上</code>，vsCode 自动提示类型</li></ol>`,13),e=[p];function t(c,r,y,i,D,C){return a(),n("div",null,e)}const d=s(o,[["render",t]]);export{A as __pageData,d as default};
