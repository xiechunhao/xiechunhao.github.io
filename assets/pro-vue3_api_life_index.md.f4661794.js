import{_ as s,o as a,c as n,O as l}from"./chunks/framework.57763b9a.js";const o="/assets/生命周期.b76a7fba.jpg",u=JSON.parse('{"title":"组合式API - 生命周期函数","description":"","frontmatter":{},"headers":[],"relativePath":"pro-vue3/api/life/index.md","filePath":"pro-vue3/api/life/index.md","lastUpdated":1688802289000}'),p={name:"pro-vue3/api/life/index.md"},e=l('<h1 id="组合式api-生命周期函数" tabindex="-1">组合式API - 生命周期函数 <a class="header-anchor" href="#组合式api-生命周期函数" aria-label="Permalink to &quot;组合式API - 生命周期函数&quot;">​</a></h1><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>计算属性基本思想和Vue2的完全一致，组合式API下的计算属性只是修改了写法</p></div><h2 id="_1-选项式对比组合式" tabindex="-1">1. 选项式对比组合式 <a class="header-anchor" href="#_1-选项式对比组合式" aria-label="Permalink to &quot;1. 选项式对比组合式&quot;">​</a></h2><p><img src="'+o+`" alt="image.png"></p><h2 id="_2-生命周期函数基本使用" tabindex="-1">2. 生命周期函数基本使用 <a class="header-anchor" href="#_2-生命周期函数基本使用" aria-label="Permalink to &quot;2. 生命周期函数基本使用&quot;">​</a></h2><blockquote><ol><li>导入生命周期函数</li><li>执行生命周期函数，传入回调</li></ol></blockquote><div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">setup</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">onMounted</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">vue</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#82AAFF;">onMounted</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">()</span><span style="color:#C792EA;">=&gt;</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 自定义逻辑</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><h2 id="_3-执行多次" tabindex="-1">3. 执行多次 <a class="header-anchor" href="#_3-执行多次" aria-label="Permalink to &quot;3. 执行多次&quot;">​</a></h2><blockquote><p>生命周期函数执行多次的时候，<code>会按照顺序依次执行</code></p></blockquote><div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">setup</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">onMounted</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">vue</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#82AAFF;">onMounted</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">()</span><span style="color:#C792EA;">=&gt;</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 自定义逻辑</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">onMounted</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">()</span><span style="color:#C792EA;">=&gt;</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 自定义逻辑</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><h2 id="_4-总结" tabindex="-1">4. 总结 <a class="header-anchor" href="#_4-总结" aria-label="Permalink to &quot;4. 总结&quot;">​</a></h2><ol><li>组合式API中生命周期函数的格式是什么？<code>on + 生命周期名字</code></li><li>组合式API中可以使用onCreated吗？没有这个钩子函数，直接写到<code>setup</code>中</li><li>组合式API中组件卸载完毕时执行哪个函数？<code>onUnmounted</code></li></ol>`,12),t=[e];function c(r,i,D,y,F,d){return a(),n("div",null,t)}const C=s(p,[["render",c]]);export{u as __pageData,C as default};
