import{_ as s,o as a,c as o,O as n}from"./chunks/framework.3a9101bc.js";const u=JSON.parse('{"title":"ReactRouter-404 路由配置","description":"","frontmatter":{},"headers":[],"relativePath":"pro-react/router/404/index.md","filePath":"pro-react/router/404/index.md","lastUpdated":1688351083000}'),l={name:"pro-react/router/404/index.md"},t=n(`<h1 id="reactrouter-404-路由配置" tabindex="-1">ReactRouter-404 路由配置 <a class="header-anchor" href="#reactrouter-404-路由配置" aria-label="Permalink to &quot;ReactRouter-404 路由配置&quot;">​</a></h1><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>当浏览器输入 url 的路径在整个路由配置中都找不到对应的 path，为了用户体验，可以使用 404 兜底组件进行 渲染</p></div><h2 id="_404-路由实现步骤" tabindex="-1">404 路由实现步骤 <a class="header-anchor" href="#_404-路由实现步骤" aria-label="Permalink to &quot;404 路由实现步骤&quot;">​</a></h2><ol><li>准备一个 NotFound 组件</li></ol><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> NotFound </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">我是一个404页面</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;;</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span></code></pre></div><ol start="2"><li>在路由表数组的末尾，以<code>*</code>号作为路由 <code>path</code> 配置路由</li></ol><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#FFCB6B;">path</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">*</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#FFCB6B;">element</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">NotFound</span><span style="color:#89DDFF;"> /&gt;,</span></span>
<span class="line"><span style="color:#89DDFF;">},</span></span></code></pre></div>`,7),e=[t];function p(c,r,i,F,d,D){return a(),o("div",null,e)}const _=s(l,[["render",p]]);export{u as __pageData,_ as default};
