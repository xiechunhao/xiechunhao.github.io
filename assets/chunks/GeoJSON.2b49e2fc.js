import{c as p}from"./Vector.f72cf874.js";import{G as f,M as G,a as F}from"./GeometryCollection.2da265b8.js";import{F as O,t as d}from"./Feature.4c59703c.js";import{aI as a,a0 as u,aM as P,bt as h,g as b,P as j}from"./reproj.50e0d4ab.js";import{L as w}from"./LineString.e8af5305.js";import{M as S}from"./MultiLineString.5776de5d.js";class N extends O{constructor(){super()}getType(){return"json"}readFeature(e,t){return this.readFeatureFromObject(c(e),this.getReadOptions(e,t))}readFeatures(e,t){return this.readFeaturesFromObject(c(e),this.getReadOptions(e,t))}readFeatureFromObject(e,t){return a()}readFeaturesFromObject(e,t){return a()}readGeometry(e,t){return this.readGeometryFromObject(c(e),this.getReadOptions(e,t))}readGeometryFromObject(e,t){return a()}readProjection(e){return this.readProjectionFromObject(c(e))}readProjectionFromObject(e){return a()}writeFeature(e,t){return JSON.stringify(this.writeFeatureObject(e,t))}writeFeatureObject(e,t){return a()}writeFeatures(e,t){return JSON.stringify(this.writeFeaturesObject(e,t))}writeFeaturesObject(e,t){return a()}writeGeometry(e,t){return JSON.stringify(this.writeGeometryObject(e,t))}writeGeometryObject(e,t){return a()}}function c(r){if(typeof r=="string"){const e=JSON.parse(r);return e||null}return r!==null?r:null}const M=N;class C extends M{constructor(e){e=e||{},super(),this.dataProjection=u(e.dataProjection?e.dataProjection:"EPSG:4326"),e.featureProjection&&(this.defaultFeatureProjection=u(e.featureProjection)),this.geometryName_=e.geometryName,this.extractGeometryName_=e.extractGeometryName,this.supportedMediaTypes=["application/geo+json","application/vnd.geo+json"]}readFeatureFromObject(e,t){let o=null;e.type==="Feature"?o=e:o={type:"Feature",geometry:e,properties:null};const i=l(o.geometry,t),n=new p;return this.geometryName_?n.setGeometryName(this.geometryName_):this.extractGeometryName_&&"geometry_name"in o!==void 0&&n.setGeometryName(o.geometry_name),n.setGeometry(i),"id"in o&&n.setId(o.id),o.properties&&n.setProperties(o.properties,!0),n}readFeaturesFromObject(e,t){const o=e;let i=null;if(o.type==="FeatureCollection"){const n=e;i=[];const s=n.features;for(let m=0,g=s.length;m<g;++m)i.push(this.readFeatureFromObject(s[m],t))}else i=[this.readFeatureFromObject(e,t)];return i}readGeometryFromObject(e,t){return l(e,t)}readProjectionFromObject(e){const t=e.crs;let o;return t?t.type=="name"?o=u(t.properties.name):t.type==="EPSG"?o=u("EPSG:"+t.properties.code):P(!1,36):o=this.dataProjection,o}writeFeatureObject(e,t){t=this.adaptOptions(t);const o={type:"Feature",geometry:null,properties:null},i=e.getId();if(i!==void 0&&(o.id=i),!e.hasProperties())return o;const n=e.getProperties(),s=e.getGeometry();return s&&(o.geometry=y(s,t),delete n[e.getGeometryName()]),h(n)||(o.properties=n),o}writeFeaturesObject(e,t){t=this.adaptOptions(t);const o=[];for(let i=0,n=e.length;i<n;++i)o.push(this.writeFeatureObject(e[i],t));return{type:"FeatureCollection",features:o}}writeGeometryObject(e,t){return y(e,this.adaptOptions(t))}}function l(r,e){if(!r)return null;let t;switch(r.type){case"Point":{t=J(r);break}case"LineString":{t=L(r);break}case"Polygon":{t=I(r);break}case"MultiPoint":{t=x(r);break}case"MultiLineString":{t=_(r);break}case"MultiPolygon":{t=E(r);break}case"GeometryCollection":{t=k(r);break}default:throw new Error("Unsupported GeoJSON type: "+r.type)}return d(t,!1,e)}function k(r,e){const t=r.geometries.map(function(o){return l(o,e)});return new f(t)}function J(r){return new b(r.coordinates)}function L(r){return new w(r.coordinates)}function _(r){return new S(r.coordinates)}function x(r){return new G(r.coordinates)}function E(r){return new F(r.coordinates)}function I(r){return new j(r.coordinates)}function y(r,e){r=d(r,!0,e);const t=r.getType();let o;switch(t){case"Point":{o=v(r);break}case"LineString":{o=T(r);break}case"Polygon":{o=A(r,e);break}case"MultiPoint":{o=U(r);break}case"MultiLineString":{o=H(r);break}case"MultiPolygon":{o=$(r,e);break}case"GeometryCollection":{o=R(r,e);break}case"Circle":{o={type:"GeometryCollection",geometries:[]};break}default:throw new Error("Unsupported geometry type: "+t)}return o}function R(r,e){return e=Object.assign({},e),delete e.featureProjection,{type:"GeometryCollection",geometries:r.getGeometriesArray().map(function(o){return y(o,e)})}}function T(r,e){return{type:"LineString",coordinates:r.getCoordinates()}}function H(r,e){return{type:"MultiLineString",coordinates:r.getCoordinates()}}function U(r,e){return{type:"MultiPoint",coordinates:r.getCoordinates()}}function $(r,e){let t;return e&&(t=e.rightHanded),{type:"MultiPolygon",coordinates:r.getCoordinates(t)}}function v(r,e){return{type:"Point",coordinates:r.getCoordinates()}}function A(r,e){let t;return e&&(t=e.rightHanded),{type:"Polygon",coordinates:r.getCoordinates(t)}}const Q=C;export{Q as G};
