import{_ as s,o as a,c as l,O as n}from"./chunks/framework.3a9101bc.js";const o="/assets/image-7.d3f0da1c.png",p="/assets/image-8.a7c65f8a.png",e="/assets/image-5.4ebc5a8b.png",t="/assets/image-6.9fe84b13.png",b=JSON.parse('{"title":"esBuild + SWC 构建 TS 项目","description":"","frontmatter":{},"headers":[],"relativePath":"pro-typescript/other/esBuild.md","filePath":"pro-typescript/other/esBuild.md","lastUpdated":1689921796000}'),c={name:"pro-typescript/other/esBuild.md"},r=n('<h1 id="esbuild-swc-构建-ts-项目" tabindex="-1">esBuild + SWC 构建 TS 项目 <a class="header-anchor" href="#esbuild-swc-构建-ts-项目" aria-label="Permalink to &quot;esBuild + SWC 构建 TS 项目&quot;">​</a></h1><div class="tip custom-block"><p class="custom-block-title">介绍</p><p>esBuild + SWC 构建 项目</p></div><h2 id="_1-esbuild-介绍" tabindex="-1">1. esBuild 介绍 <a class="header-anchor" href="#_1-esbuild-介绍" aria-label="Permalink to &quot;1. esBuild 介绍&quot;">​</a></h2><blockquote><p>在 <a href="https://esbuild.github.io/" target="_blank" rel="noreferrer"><code>esbuild</code></a> 的官方介绍中打包 threejs 只需要 0.37 秒 无限接近于亚索的 Q 技能冷却时间可以说是很快了。</p></blockquote><p><img src="'+o+'" alt="Alt text"></p><p>esbuild 是 go 语言编写的并且是多线程执行,性能是 js 的好几十倍，所以很快。</p><ul><li>• 无需缓存即可实现基础打包</li><li>• 支持 ES6 跟 CommonJS 模块</li><li>• 支持 ES 6 Tree Shaking</li><li>• 体积小</li><li>• 插件化</li><li>• 其他</li><li>• 内置支持编译 jsx</li></ul><h2 id="_2-swc-介绍" tabindex="-1">2.SWC 介绍 <a class="header-anchor" href="#_2-swc-介绍" aria-label="Permalink to &quot;2.SWC 介绍&quot;">​</a></h2><blockquote><p><a href="https://www.swc.net.cn/" target="_blank" rel="noreferrer"><code>swc</code></a> 是用 rust 写的，所实现的功能跟 babel 一样，es6 语法转 es5，但是速度比 babel 更快，前端基建工具使用 rust 的是越来越多了，未来可能还会有一个替代 postCss 的 😂。</p></blockquote><p><img src="'+p+'" alt="Alt text"></p><blockquote><p>SWC 则宣称其比 Babel 快 20 倍(四核情况下可以快 70 倍)</p></blockquote><p>所以：那如果把 esbuild + swc 结合起来构建那岂不是接近光速？下面我们来试试</p><h2 id="_3-需要安装的依赖" tabindex="-1">3. 需要安装的依赖 <a class="header-anchor" href="#_3-需要安装的依赖" aria-label="Permalink to &quot;3. 需要安装的依赖&quot;">​</a></h2><ol><li><p><code>npm install @swc/core</code> 是 swc 的核心包，用于编译 JavaScript 和 TypeScript 代码</p></li><li><p><code>npm install esbuild</code> 是一个快速的 JavaScript 和 TypeScript 构建工具</p></li><li><p><code>npm install ts-node</code> 用来编译打包运行 <code>ts-node-esm</code> 命令</p></li></ol><h2 id="_4-搭建基础项目结构" tabindex="-1">4. 搭建基础项目结构 <a class="header-anchor" href="#_4-搭建基础项目结构" aria-label="Permalink to &quot;4. 搭建基础项目结构&quot;">​</a></h2><p><img src="'+e+`" alt="Alt text"></p><ol><li>使用 <code>tsc --init</code> 命令 生成 <code>tsconfig.json</code> 配置文件 <ul><li>需要修改这三个命令，不让等会的 config.ts 配置打包的文件会语法报错 <code>&quot;target&quot;: &quot;ESNext&quot;,</code>,<code>&quot;module&quot;: &quot;ESNext&quot;,</code>,<code>&quot;moduleResolution&quot;: &quot;Node&quot;, </code></li></ul></li><li>使用 <code>npm init</code> 命令 生成 <code>package.json</code> 配置文件 <ul><li>运行后会让你填写一些基础信息,直接<code>yes</code>跳过默认就行</li><li>需要添加修改 <code>&quot;type&quot;: &quot;module&quot;,</code> 配置</li></ul></li><li>配置基础打包命令,在 <code>package.json</code> 文件下的 <code>scripts</code> 添加运行指令 <code>dev-esm:开发环境</code></li></ol><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">scripts</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">: </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">dev-esm</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">npx ts-node-esm ./config.ts</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">},</span></span></code></pre></div><ol start="4"><li>编写一个测试的 ts 语法文件；在 <code>src</code> 文件夹中新增 <code>main.ts</code> 文件，编写一些 ts 语法文件</li></ol><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> a</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">number</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> b</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">ikun</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> x </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> fn </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">123</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(x</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> fn)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><h2 id="_5-esbuild-swc-基础配置" tabindex="-1">5. esBuild+SWC 基础配置 <a class="header-anchor" href="#_5-esbuild-swc-基础配置" aria-label="Permalink to &quot;5. esBuild+SWC 基础配置&quot;">​</a></h2><ol><li>在根目录新建 <code>config.js</code> 文件 (这是最基本的)</li></ol><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> esbuild </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">esbuild</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//打包工具</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> swc </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">@swc/core</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//类似于babel es6 转 es5</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> fs </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">node:fs</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> esbuild</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">build</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">entryPoints</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">./src/main.ts</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//入口文件</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">bundle</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//模块单独打包</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">loader</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">.js</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">js</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">.ts</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">ts</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">.jsx</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">jsx</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">.tsx</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">tsx</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">treeShaking</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">define</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">p<wbr>rocess.env.NODE_ENV</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">&quot;production&quot;</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">plugins</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">      </span><span style="color:#676E95;font-style:italic;">//实现自定义loader</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">swc-loader</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">setup</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">build</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">build</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">onLoad</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> filter</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">\\.</span><span style="color:#89DDFF;">(</span><span style="color:#C3E88D;">js</span><span style="color:#89DDFF;">|</span><span style="color:#C3E88D;">ts</span><span style="color:#89DDFF;">|</span><span style="color:#C3E88D;">tsx</span><span style="color:#89DDFF;">|</span><span style="color:#C3E88D;">jsx</span><span style="color:#89DDFF;">)/</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">},</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">args</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">          </span><span style="color:#676E95;font-style:italic;">// console.log(args);</span></span>
<span class="line"><span style="color:#F07178;">          </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">content</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">fs</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">readFileSync</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">args</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">path</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">utf-8</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">          </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">code</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">swc</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">transformSync</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">content</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">            filename</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">args</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">path</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">          </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">          </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">            contents</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">code</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">          </span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">  ]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">outdir</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">dist</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><h2 id="_6-运行打包" tabindex="-1">6. 运行打包 <a class="header-anchor" href="#_6-运行打包" aria-label="Permalink to &quot;6. 运行打包&quot;">​</a></h2><ol><li>执行 <code>npm run dev-esm</code> 运行即可,可以看到已经编译完成，并且通过 swc 转换为了 es5 语法文件</li></ol><p><img src="`+t+'" alt="Alt text"></p><h2 id="_7-esbuild-swc-高级用法" tabindex="-1">7. esBuild+SWC 高级用法 <a class="header-anchor" href="#_7-esbuild-swc-高级用法" aria-label="Permalink to &quot;7. esBuild+SWC 高级用法&quot;">​</a></h2><blockquote><p>除了上述基本用法之外，swc 和 esbuild 还提供了许多高级用法，可以更好地满足我们的构建需求。</p></blockquote><p><strong>1. 插件系统</strong></p><p>swc 和 esbuild 都提供了插件系统，可以通过插件来扩展其功能。例如，swc 的插件可以用于优化代码，提高性能。esbuild 的插件则可以用于处理特定类型的文件，或自定义转换规则。</p><p><strong>2. 缓存系统</strong></p><p>swc 和 esbuild 都提供了缓存系统，可以减少重复编译时间。当文件内容没有发生变化时，swc 和 esbuild 会从缓存中读取已编译的代码，以提高构建速度。</p><p><strong>3. Watch 模式</strong></p><p>swc 和 esbuild 都支持 Watch 模式，可以在文件发生变化时自动重新编译代码。Watch 模式可以减少手动运行构建命令的频率，提高开发效率。</p><p><strong>4. 自定义插件</strong></p><p>最后，我们可以通过编写自定义插件来扩展 swc 和 esbuild 的功能。例如，可以编写一个插件来自动引入 CSS 文件，或者优化 JavaScript 代码。自定义插件可以根据实际需求进行编写，以更好地满足项目的构建需求。</p><p><strong>5. 结论</strong></p><p>本文介绍了如何使用 swc 和 esbuild 来构建一个简单的 TypeScript 应用程序，并讨论了一些高级用法。swc 和 esbuild 都是现代前端构建工具中的代表，它们都提供了快速编译、代码压缩等功能，可以有效提高应用程序的性能。通过学习 swc 和 esbuild 的使用方法，我们可以更好地进行前端工程化开发，提高开发效率和代码质量。</p>',38),D=[r];function F(y,i,C,A,d,u){return a(),l("div",null,D)}const h=s(c,[["render",F]]);export{b as __pageData,h as default};
