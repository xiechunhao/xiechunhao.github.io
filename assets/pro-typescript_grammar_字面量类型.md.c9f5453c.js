import{_ as s,o as a,c as o,O as l}from"./chunks/framework.3a9101bc.js";const d=JSON.parse('{"title":"字面量类型","description":"","frontmatter":{},"headers":[],"relativePath":"pro-typescript/grammar/字面量类型.md","filePath":"pro-typescript/grammar/字面量类型.md","lastUpdated":1689921796000}'),n={name:"pro-typescript/grammar/字面量类型.md"},p=l(`<h1 id="字面量类型" tabindex="-1">字面量类型 <a class="header-anchor" href="#字面量类型" aria-label="Permalink to &quot;字面量类型&quot;">​</a></h1><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>概念：使用 <code>js 字面量</code> 作为类型对变量进行类型注解，这种类型就是字面量类型, 字面量类型比普通的类型更加精确</p></div><h2 id="_1-字面量类型的实际应用" tabindex="-1">1. 字面量类型的实际应用 <a class="header-anchor" href="#_1-字面量类型的实际应用" aria-label="Permalink to &quot;1. 字面量类型的实际应用&quot;">​</a></h2><blockquote><p>字面量类型在实际应用中通常和联合类型结合起来使用，提供一个精确的可选范围</p></blockquote><ol><li>场景 1：性别只能是 <code>男</code> 和 <code>女</code>，就可以采用联合类型配合字面量的类型定义方案</li></ol><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Gender</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">男</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">女</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> gender</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Gender</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">女</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span></code></pre></div><ol start="2"><li>场景 2：ElementUI 中的 el-button 组件按钮的 type 属性</li></ol><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Props</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">type</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">primary</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">success</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">danger</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">warning</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span></code></pre></div><h2 id="_2-总结" tabindex="-1">2. 总结 <a class="header-anchor" href="#_2-总结" aria-label="Permalink to &quot;2. 总结&quot;">​</a></h2><ol><li>字面量类型通常与<code>联合类型（|）</code>一起来使用，否则毫无意义（否则就是直接用变量声明即可）</li><li>字面量类型与常规类型相比 <code>类型更加精确</code>，<code>提供精确的可选值范围</code> 的优势</li></ol>`,10),e=[p];function t(c,r,D,y,F,i){return a(),o("div",null,e)}const A=s(n,[["render",t]]);export{d as __pageData,A as default};
