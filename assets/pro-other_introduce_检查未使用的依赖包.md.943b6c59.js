import{_ as a,o as e,c as s,O as l}from"./chunks/framework.3a9101bc.js";const t="/assets/image-4.4aead0a2.png",C=JSON.parse('{"title":"如何检查前端项目中未使用的依赖包？","description":"","frontmatter":{},"headers":[],"relativePath":"pro-other/introduce/检查未使用的依赖包.md","filePath":"pro-other/introduce/检查未使用的依赖包.md","lastUpdated":1693814028000}'),o={name:"pro-other/introduce/检查未使用的依赖包.md"},n=l('<h1 id="如何检查前端项目中未使用的依赖包" tabindex="-1">如何检查前端项目中未使用的依赖包？ <a class="header-anchor" href="#如何检查前端项目中未使用的依赖包" aria-label="Permalink to &quot;如何检查前端项目中未使用的依赖包？&quot;">​</a></h1><div class="tip custom-block"><p class="custom-block-title">介绍</p><ul><li>随着前端项目中使用的依赖包越来越多，而其中一部分依赖包可能并未被项目所使用，手动查找这些依赖包既耗时又繁琐。那么，有没有工具能够快速地帮助我们识别和清理项目中未使用的依赖包呢？本文将介绍两个常用的工具来简化这一过程！</li></ul></div><h2 id="_1-depcheck" tabindex="-1">1. depcheck <a class="header-anchor" href="#_1-depcheck" aria-label="Permalink to &quot;1. depcheck&quot;">​</a></h2><ol><li>安装</li></ol><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-g</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">depcheck</span></span></code></pre></div><ol start="2"><li>使用,在项目根目录运行</li></ol><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">depcheck</span></span></code></pre></div><p><img src="'+t+'" alt="Alt text"></p><h2 id="_2-npm-check" tabindex="-1">2. npm-check <a class="header-anchor" href="#_2-npm-check" aria-label="Permalink to &quot;2. npm-check&quot;">​</a></h2><ol><li>安装</li></ol><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-g</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">npm-check</span></span></code></pre></div><ol start="2"><li>使用,在项目根目录运行</li></ol><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">npm-check</span></span></code></pre></div><h2 id="更多" tabindex="-1">更多 <a class="header-anchor" href="#更多" aria-label="Permalink to &quot;更多&quot;">​</a></h2><p><a href="https://juejin.cn/post/7241480662137552957#heading-0" target="_blank" rel="noreferrer">如何检查前端项目中未使用的依赖包？</a></p>',15),c=[n];function p(r,i,h,d,_,m){return e(),s("div",null,c)}const k=a(o,[["render",p]]);export{C as __pageData,k as default};
