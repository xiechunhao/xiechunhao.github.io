import{_ as s,o as a,c as l,O as n}from"./chunks/framework.3a9101bc.js";const d=JSON.parse('{"title":"小程序自定义组件","description":"","frontmatter":{},"headers":[],"relativePath":"pro-weixin/use/tips6/index.md","filePath":"pro-weixin/use/tips6/index.md","lastUpdated":1688802289000}'),o={name:"pro-weixin/use/tips6/index.md"},p=n(`<h1 id="小程序自定义组件" tabindex="-1">小程序自定义组件 <a class="header-anchor" href="#小程序自定义组件" aria-label="Permalink to &quot;小程序自定义组件&quot;">​</a></h1><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>小程序中内置了许多的组件供开发者使用，不仅如此开发者还可根据需要自定义组件</p></div><h2 id="_1-创建组件" tabindex="-1">1. 创建组件 <a class="header-anchor" href="#_1-创建组件" aria-label="Permalink to &quot;1. 创建组件&quot;">​</a></h2><ol><li>根目录新建 <code>components</code> 文件，专门用于存放自定义组件</li><li>创建自定义组件: 通过小程序开发者工具可以快速创建组件（选中 <code>components</code> 文件，右键选择 <code>新建 Components</code> 即可 ）</li><li>创建好的自定义组件从结构上看与页面是完全一致的，由 <code>.wxml</code>、<code>.wxss</code>、<code>.js</code>、<code>.json</code> 构成，也有两点重要的区别： <ul><li>• <code>.json</code> 文件中必须有 <code>component: true</code></li><li>• <code>.js</code> 文件中调用的是 <code>Component</code> 函数</li></ul></li></ol><h2 id="_2-使用组件" tabindex="-1">2. 使用组件 <a class="header-anchor" href="#_2-使用组件" aria-label="Permalink to &quot;2. 使用组件&quot;">​</a></h2><ol><li>组件需要在页面或全局中注册后才可以使用，注册组件会用到配置项 <code>usingComponents</code> ，它的值是对象类型数据，属性名为自定义组件的名称，属性的值为自定义组件的路径</li></ol><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">usingComponents</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">自定义组件名称</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">自定义组件的路径</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">navigation-bar</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">./navigation-bar/index</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h2 id="_3-组件样式" tabindex="-1">3. 组件样式 <a class="header-anchor" href="#_3-组件样式" aria-label="Permalink to &quot;3. 组件样式&quot;">​</a></h2><blockquote><p>在开发中经常会需要修改自定义组件内部的样式，有两种方式可以实现这个目的。</p></blockquote><ol><li>样式隔离：默认情况下页面的样式无法影响自定义组件的样式 <ul><li>• <code>addGlobalClass: true</code> 允许在页面中修改自定义组件的样式，但要求必须使用组件本身的类名</li><li>• 在组件中定义样式时使用的选择器不能是 <code>标签选择器</code>、<code>ID 选择器</code>或 <code>属性选择器</code>，因为防止组件样式覆盖</li></ul></li><li>外部样式类：（比较难理解） <ul><li>• <code>externalClasses: [&#39;xxx-class&#39;, &#39;yyy-class&#39;]</code> 开发自定义的样式类</li><li>• <code>xxx-class</code> 和 <code>yyy-class</code> 可以接收外部传入的类名，并应用到组件的布局结构中</li></ul></li></ol><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#82AAFF;">Component</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">options</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">addGlobalClass</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 开发自定义的样式类</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">externalClasses</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">custom-class</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">title-class</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><div class="language-xml"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">navigation-bar</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#C792EA;">custom-class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">my-navigation-bar</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#C792EA;">title-class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">my-navigation-bar-title</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">navigation-bar</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><div class="language-xml"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">view</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">navigation-bar custom-class</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">view</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">navigation-bar-title title-class</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    自定义标题</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">view</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">view</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><h2 id="_4-组件-slot-插槽" tabindex="-1">4. 组件 slot（插槽） <a class="header-anchor" href="#_4-组件-slot-插槽" aria-label="Permalink to &quot;4. 组件 slot（插槽）&quot;">​</a></h2><blockquote><p>小程序中默认只能使用一个 <code>slot</code> 需要多个插槽时需要传入 <code>options: { multipleSlots: true }</code>。</p></blockquote><ol><li><p>创建插槽：在组件的任意位置使用 <code>&lt;slot /&gt;</code> 进行占位</p><ul><li>• 默认只能使用 1 个 <code>&lt;slot&gt;</code></li><li>• <code>options: { multipleSlots: true }</code> 启用多插槽</li><li>• <code>name</code> 为不同的 <code>&lt;slot /&gt;</code> 命名来区分不同的插槽</li></ul></li><li><p>使用插槽</p><ul><li>• 单个插槽的情况下直接在组件中间填充内容即可</li><li>• 多外插槽的情况下需要使用 <code>slot</code> 属性来指定插槽位置</li><li>• 插槽示例：如下</li><li>navigation-bar 组件，添加插槽位置<div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">view</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">navigation-bar-title title-class</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">&lt;!-- 单个插槽，不需要具名 --&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">&lt;!-- &lt;slot&gt;&lt;/slot&gt; --&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">&lt;!-- 多个插槽，需要具名才能区分 --&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">slot</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">title</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">slot</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">slot</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">test</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">slot</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">view</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div></li><li>使用插槽<div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">navigation-bar</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#C792EA;">custom-class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">my-navigation-bar</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#C792EA;">title-class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">my-navigation-bar-title</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">text</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">slot</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">title</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">自定义标题</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">text</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">text</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">slot</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">test</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">测试</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">text</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">navigation-bar</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div></li></ul></li></ol><h2 id="_5-组件生命周期" tabindex="-1">5. 组件生命周期 <a class="header-anchor" href="#_5-组件生命周期" aria-label="Permalink to &quot;5. 组件生命周期&quot;">​</a></h2><blockquote><p>小程序自定义组件的生命周期需要定义在 <code>lifetimes</code> 中：</p></blockquote><ol><li><p><code>created</code> 组件创建时触发，类似于 Vue 中的 <code>created</code> 生命周期，该生命周期中不能调用 <code>this.setData</code></p></li><li><p><code>attached</code> 组件初始化完毕时触发，类似于 Vue 中的 <code>mounted</code> 生命周期，该生命周期函数使用最频繁</p></li></ol><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#82AAFF;">Component</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">lifetimes</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">created</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">      </span><span style="color:#676E95;font-style:italic;">// code...</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">attached</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">      </span><span style="color:#676E95;font-style:italic;">// code...</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><h2 id="_6-组件通信" tabindex="-1">6. 组件通信 <a class="header-anchor" href="#_6-组件通信" aria-label="Permalink to &quot;6. 组件通信&quot;">​</a></h2><blockquote><p>组件通信是指将页面或组件的数据传入子组件内部或者将子组件的数据传入父组件或页面当中。</p></blockquote><ol><li><p><strong>自定义属性：</strong></p><ul><li>• 组件通过自定义的属性接收来自于组件外部（父组件或页面）的数据：</li></ul><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#82AAFF;">Component</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">properties</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">back</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> Boolean</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">delta</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">type</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> Number</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">value</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><div class="language-xml"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">navigation-bar</span><span style="color:#89DDFF;"> back </span><span style="color:#C792EA;">delta</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">1</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">text</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">slot</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">title</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">自定义标题</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">text</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">navigation-bar</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div></li><li><p><strong>自定义事件：</strong></p><ul><li><p>• 组件自定义事件的监听：<code>bind:事件类型（自定义）=&quot;事件回调&quot;</code></p></li><li><p>• 组件自定义事件的触发：<code>this.triggerEvent(&#39;事件类型（自定义）&#39;, 参数)</code></p></li><li><p>• 示例用到的样式代码：</p><blockquote><p>在组件的 js 中定义自定义事件的名称和触发方式，例如，定义一个名为 <code>myevent</code> 的自定义事件，并在组件中某个方法中触发该事件：</p></blockquote></li></ul><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#82AAFF;">Component</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">methods</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">countStart</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">this.</span><span style="color:#82AAFF;">triggerEvent</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">myevent</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">data</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">time</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><blockquote><p>在组件的 wxml 中绑定自定义事件，在需要监听自定义事件的元素上绑定 <code>bind:{eventName}</code> 属性</p></blockquote><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">view</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">bind:myevent</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">onMyChange</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">我是组件的一个元素</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">view</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><blockquote><p>在组件的 js 中实现自定义事件处理函数，在组件的 js 中通过声明一个与 <code>bind:{eventName}</code> 属性中指定的方法同名的方法，作为自定义事件的处理函数，例如：</p></blockquote><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#82AAFF;">Component</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">methods</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">onMyEvent</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">event</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">event</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">detail</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">myData</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">//将会输出&quot;hello&quot;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span></code></pre></div></li></ol><h2 id="_7-vant-组件库" tabindex="-1">7. Vant 组件库 <a class="header-anchor" href="#_7-vant-组件库" aria-label="Permalink to &quot;7. Vant 组件库&quot;">​</a></h2><blockquote><p>Vant 组件库有 Vue 和小程序两个版本，在使用时要注意区分！</p></blockquote><ul><li><p>安装，在小程序的根目录中安装</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">@vant/weapp</span></span></code></pre></div></li></ul><ol><li><p>构建 npm，小程序中凡是通过 npm 下载的模板都必须经过构建才能使用，构建后的代码会存放在 miniprogram_npm 中。</p></li><li><p>移除全局配置 <code>&quot;style&quot;: &quot;v2&quot;</code>，否则 Vant 组件的样式会受到影响</p></li><li><p>全局注册，在 <code>app.json</code> 中注册 Vant 的组件，组件的路径不以 <code>/</code> 或 <code>./</code> 开头</p></li></ol>`,27),e=[p];function t(c,r,D,F,y,i){return a(),l("div",null,e)}const A=s(o,[["render",t]]);export{d as __pageData,A as default};
