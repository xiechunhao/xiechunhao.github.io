import{_ as s,o as a,c as o,O as n}from"./chunks/framework.57763b9a.js";const p="/assets/跨层通讯.81bb0d9c.jpg",A=JSON.parse('{"title":"组合式 API - provide和inject 跨层级通讯","description":"","frontmatter":{},"headers":[],"relativePath":"pro-vue3/api/provide/index.md","filePath":"pro-vue3/api/provide/index.md","lastUpdated":1688802289000}'),e={name:"pro-vue3/api/provide/index.md"},l=n('<h1 id="组合式-api-provide和inject-跨层级通讯" tabindex="-1">组合式 API - provide和inject 跨层级通讯 <a class="header-anchor" href="#组合式-api-provide和inject-跨层级通讯" aria-label="Permalink to &quot;组合式 API - provide和inject 跨层级通讯&quot;">​</a></h1><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>作用和场景：顶层组件向任意的底层组件传递数据和方法，实现跨层组件通信</p></div><p><img src="'+p+`" alt="image.png"></p><h2 id="_1-跨层传递普通数据" tabindex="-1">1. 跨层传递普通数据 <a class="header-anchor" href="#_1-跨层传递普通数据" aria-label="Permalink to &quot;1. 跨层传递普通数据&quot;">​</a></h2><blockquote><p>实现步骤 父组件有一个 <code>provide</code> 选项来提供数据，后代组件有一个 <code>inject</code> 选项来开始使用这些数据</p></blockquote><p>2.1 顶层组件通过 <code>provide</code> 函数提供数据</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> car </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">ref</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">奔驰</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;">price</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">40万</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#82AAFF;">provide</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">car</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">car)</span></span></code></pre></div><p>2.2 后代组件通过 <code>inject</code> 函数获取顶层组件数据</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> car </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">inject</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">car</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span></code></pre></div><h2 id="_2-跨层传递响应式数据" tabindex="-1">2. 跨层传递响应式数据 <a class="header-anchor" href="#_2-跨层传递响应式数据" aria-label="Permalink to &quot;2. 跨层传递响应式数据&quot;">​</a></h2><blockquote><p>在调用provide函数时，第二个参数设置为 <code>ref对象</code></p></blockquote><h2 id="_3-跨层传递方法" tabindex="-1">3. 跨层传递方法 <a class="header-anchor" href="#_3-跨层传递方法" aria-label="Permalink to &quot;3. 跨层传递方法&quot;">​</a></h2><p>4.1 顶层组件可以向底层组件传递方法，</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> setCount </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">count</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">value</span><span style="color:#89DDFF;">++</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#82AAFF;">provide</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">setCount-key</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">setCount)</span></span></code></pre></div><p>4.2 底层组件调用方法修改顶层组件的数据</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> setCount </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">inject</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">setCount-key</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span></code></pre></div>`,16),t=[l];function c(r,i,D,y,d,C){return a(),o("div",null,t)}const u=s(e,[["render",c]]);export{A as __pageData,u as default};
