import{A as K}from"./chunks/index.a511ac44.js";import{z as cs,aO as x,aQ as H,aR as fs,aU as ie,aW as ce,aV as ue,q as ds,aT as os,aS as ye,aF as Cs,r as Fe,u as As,E as q,N as De,x as vs,w as us,aq as he,ch as fe,R as ss,aA as de,cq as Ce,cr as Ts,cs as Ae,ct as Te,aK as Is,at as Ee,a4 as Es,g as _e,cu as ge,cv as Re,C as me,cw as xe,M as _s,V as be,bR as gs}from"./chunks/reproj.9b488601.js";import{b as we,I as $s,R as ys,g as rs,d as Se,f as Rs,L as Ne,B as Oe,T as ms}from"./chunks/TileImage.70f39159.js";import{X as J}from"./chunks/XYZ.94b2552a.js";import{F as xs}from"./chunks/FullScreen.fe51dd7f.js";import{W as Ls,A as ve,S as Us,a as Ie,c as $e,E as Le,f as Ue,b as Be}from"./chunks/Layer.5232f2ff.js";import{d as Me,p as Ge,a3 as Pe,o as Bs,c as Ms,M as Xe,N as ze,z as P,_ as je,G as qe,a as He,O as Ye}from"./chunks/framework.873b9d65.js";class We{constructor(s,t){this.name=s,this.data=t,this.texture_=null}getTexture(s){if(!this.texture_){const t=s.createTexture();s.bindTexture(s.TEXTURE_2D,t),s.texParameteri(s.TEXTURE_2D,s.TEXTURE_WRAP_S,s.CLAMP_TO_EDGE),s.texParameteri(s.TEXTURE_2D,s.TEXTURE_WRAP_T,s.CLAMP_TO_EDGE),s.texParameteri(s.TEXTURE_2D,s.TEXTURE_MIN_FILTER,s.NEAREST),s.texParameteri(s.TEXTURE_2D,s.TEXTURE_MAG_FILTER,s.NEAREST),s.texImage2D(s.TEXTURE_2D,0,s.RGBA,this.data.length/4,1,0,s.RGBA,s.UNSIGNED_BYTE,this.data),this.texture_=t}return this.texture_}}const ke=We;function es(e){return e instanceof Image||e instanceof HTMLCanvasElement||e instanceof HTMLVideoElement?e:null}function ps(e){return e instanceof Uint8Array||e instanceof Uint8ClampedArray||e instanceof Float32Array||e instanceof DataView?e:null}let z=null;function Ve(e){z||(z=cs(e.width,e.height,void 0,{willReadFrequently:!0}));const s=z.canvas,t=e.width;s.width!==t&&(s.width=t);const n=e.height;return s.height!==n&&(s.height=n),z.clearRect(0,0,t,n),z.drawImage(e,0,0),z.getImageData(0,0,t,n).data}const Ze=[256,256];class Ke extends we{constructor(s){const t=x.IDLE;super(s.tileCoord,t,{transition:s.transition,interpolate:s.interpolate}),this.loader_=s.loader,this.data_=null,this.error_=null,this.size_=s.size||null}getSize(){if(this.size_)return this.size_;const s=es(this.data_);return s?[s.width,s.height]:Ze}getData(){return this.data_}getError(){return this.error_}load(){if(this.state!==x.IDLE&&this.state!==x.ERROR)return;this.state=x.LOADING,this.changed();const s=this;this.loader_().then(function(t){s.data_=t,s.state=x.LOADED,s.changed()}).catch(function(t){s.error_=t,s.state=x.ERROR,s.changed()})}}const Gs=Ke;class Je extends Gs{constructor(s){super({tileCoord:s.tileCoord,loader:()=>Promise.resolve(new Uint8Array(4)),interpolate:s.interpolate,transition:s.transition}),this.pixelRatio_=s.pixelRatio,this.gutter_=s.gutter,this.reprojData_=null,this.reprojError_=null,this.reprojSize_=void 0,this.sourceTileGrid_=s.sourceTileGrid,this.targetTileGrid_=s.targetTileGrid,this.wrappedTileCoord_=s.wrappedTileCoord||s.tileCoord,this.sourceTiles_=[],this.sourcesListenerKeys_=null,this.sourceZ_=0;const t=this.targetTileGrid_.getTileCoordExtent(this.wrappedTileCoord_),n=this.targetTileGrid_.getExtent();let o=this.sourceTileGrid_.getExtent();const a=n?H(t,n):t;if(fs(a)===0){this.state=x.EMPTY;return}const l=s.sourceProj,c=l.getExtent();c&&(o?o=H(o,c):o=c);const y=this.targetTileGrid_.getResolution(this.wrappedTileCoord_[0]),u=s.targetProj,p=ie(l,u,a,y);if(!isFinite(p)||p<=0){this.state=x.EMPTY;return}const i=s.errorThreshold!==void 0?s.errorThreshold:ce;if(this.triangulation_=new ue(l,u,a,o,p*i,y),this.triangulation_.getTriangles().length===0){this.state=x.EMPTY;return}this.sourceZ_=this.sourceTileGrid_.getZForResolution(p);let h=this.triangulation_.calculateSourceExtent();if(o&&(l.canWrapX()?(h[1]=ds(h[1],o[1],o[3]),h[3]=ds(h[3],o[1],o[3])):h=H(h,o)),!fs(h))this.state=x.EMPTY;else{const D=this.sourceTileGrid_.getTileRangeForExtentAndZ(h,this.sourceZ_),C=s.getTileFunction;for(let b=D.minX;b<=D.maxX;b++)for(let g=D.minY;g<=D.maxY;g++){const w=C(this.sourceZ_,b,g,this.pixelRatio_);w&&this.sourceTiles_.push(w)}this.sourceTiles_.length===0&&(this.state=x.EMPTY)}}getSize(){return this.reprojSize_}getData(){return this.reprojData_}getError(){return this.reprojError_}reproject_(){const s=[];if(this.sourceTiles_.forEach(t=>{if(!t||t.getState()!==x.LOADED)return;const n=t.getSize(),o=this.gutter_;let a;const l=ps(t.getData());l?a=l:a=Ve(es(t.getData()));const c=[n[0]+2*o,n[1]+2*o],y=a instanceof Float32Array,u=c[0]*c[1],p=y?Float32Array:Uint8Array,i=new p(a.buffer),h=p.BYTES_PER_ELEMENT,D=h*i.length/u,C=i.byteLength/c[1],b=Math.floor(C/h/c[0]),g=u*b;let w=i;if(i.length!==g){w=new p(g);let T=0,R=0;const E=c[0]*b;for(let _=0;_<c[1];++_){for(let A=0;A<E;++A)w[T++]=i[R+A];R+=C/h}}s.push({extent:this.sourceTileGrid_.getTileCoordExtent(t.tileCoord),data:new Uint8Array(w.buffer),dataType:p,bytesPerPixel:D,pixelSize:c})}),this.sourceTiles_.length=0,s.length===0)this.state=x.ERROR;else{const t=this.wrappedTileCoord_[0],n=this.targetTileGrid_.getTileSize(t),o=typeof n=="number"?n:n[0],a=typeof n=="number"?n:n[1],l=this.targetTileGrid_.getResolution(t),c=this.sourceTileGrid_.getResolution(this.sourceZ_),y=this.targetTileGrid_.getTileCoordExtent(this.wrappedTileCoord_);let u,p;const i=s[0].bytesPerPixel,h=Math.ceil(i/3);for(let D=h-1;D>=0;--D){const C=[];for(let E=0,_=s.length;E<_;++E){const A=s[E],m=A.data,S=A.pixelSize,U=S[0],v=S[1],G=cs(U,v,os),Y=G.createImageData(U,v),B=Y.data;let $=D*3;for(let M=0,ns=B.length;M<ns;M+=4)B[M]=m[$],B[M+1]=m[$+1],B[M+2]=m[$+2],B[M+3]=255,$+=i;G.putImageData(Y,0,0),C.push({extent:A.extent,image:G.canvas})}const b=ye(o,a,this.pixelRatio_,c,this.sourceTileGrid_.getExtent(),l,y,this.triangulation_,C,this.gutter_,!1,!1);for(let E=0,_=C.length;E<_;++E){const m=C[E].image.getContext("2d");Cs(m),os.push(m.canvas)}const g=b.getContext("2d"),w=g.getImageData(0,0,b.width,b.height);Cs(g),os.push(b),u||(p=new Uint8Array(i*w.width*w.height),u=new s[0].dataType(p.buffer));const T=w.data;let R=D*3;for(let E=0,_=T.length;E<_;E+=4)T[E+3]===255?(p[R]=T[E],p[R+1]=T[E+1],p[R+2]=T[E+2]):(p[R]=0,p[R+1]=0,p[R+2]=0),R+=i}this.reprojData_=u,this.reprojSize_=[Math.round(o*this.pixelRatio_),Math.round(a*this.pixelRatio_)],this.state=x.LOADED}this.changed()}load(){if(this.state!==x.IDLE&&this.state!==x.ERROR)return;this.state=x.LOADING,this.changed();let s=0;this.sourcesListenerKeys_=[],this.sourceTiles_.forEach(t=>{const n=t.getState();if(n!==x.IDLE&&n!==x.LOADING)return;s++;const o=Fe(t,q.CHANGE,function(){const a=t.getState();(a==x.LOADED||a==x.ERROR||a==x.EMPTY)&&(As(o),s--,s===0&&(this.unlistenSources_(),this.reproject_()))},this);this.sourcesListenerKeys_.push(o)}),s===0?setTimeout(this.reproject_.bind(this),0):this.sourceTiles_.forEach(function(t){t.getState()==x.IDLE&&t.load()})}unlistenSources_(){this.sourcesListenerKeys_.forEach(As),this.sourcesListenerKeys_=null}}const Ps=Je;class Qe extends De{constructor(s){super(),this.tile,this.handleTileChange_=this.handleTileChange_.bind(this),this.gutter_=s.gutter||0,this.helper_=s.helper,this.loaded=!1,this.ready=!1}setTile(s){if(s!==this.tile)if(this.tile&&this.tile.removeEventListener(q.CHANGE,this.handleTileChange_),this.tile=s,this.loaded=s.getState()===x.LOADED,this.loaded)this.uploadTile();else{if(s instanceof $s){const t=s.getImage();t instanceof Image&&!t.crossOrigin&&(t.crossOrigin="anonymous")}s.addEventListener(q.CHANGE,this.handleTileChange_)}}uploadTile(){vs()}setReady(){this.ready=!0,this.dispatchEvent(q.CHANGE)}handleTileChange_(){this.tile.getState()===x.LOADED&&(this.loaded=!0,this.uploadTile())}disposeInternal(){this.tile.removeEventListener(q.CHANGE,this.handleTileChange_)}}const st=Qe;function Xs(e,s,t){const n=t?e.LINEAR:e.NEAREST;e.bindTexture(e.TEXTURE_2D,s),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,n),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,n)}function et(e,s,t,n){Xs(e,s,n),e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,t)}function bs(e,s,t,n,o,a){const l=e.getGL();let c,y;t instanceof Float32Array?(c=l.FLOAT,e.getExtension("OES_texture_float"),y=e.getExtension("OES_texture_float_linear")!==null):(c=l.UNSIGNED_BYTE,y=!0),Xs(l,s,a&&y);const u=t.byteLength/n[1];let p=1;u%8===0?p=8:u%4===0?p=4:u%2===0&&(p=2);let i;switch(o){case 1:{i=l.LUMINANCE;break}case 2:{i=l.LUMINANCE_ALPHA;break}case 3:{i=l.RGB;break}case 4:{i=l.RGBA;break}default:throw new Error(`Unsupported number of bands: ${o}`)}const h=l.getParameter(l.UNPACK_ALIGNMENT);l.pixelStorei(l.UNPACK_ALIGNMENT,p),l.texImage2D(l.TEXTURE_2D,0,i,n[0],n[1],0,i,c,t),l.pixelStorei(l.UNPACK_ALIGNMENT,h)}let j=null;function tt(){j=cs(1,1,void 0,{willReadFrequently:!0})}class nt extends st{constructor(s){super(s),this.textures=[],this.renderSize_=us(s.grid.getTileSize(s.tile.tileCoord[0])),this.bandCount=NaN;const t=new Ls(ve,Us);t.fromArray([0,1,1,1,1,0,0,0]),this.helper_.flushBufferData(t),this.coords=t,this.setTile(s.tile)}uploadTile(){const s=this.helper_,t=s.getGL(),n=this.tile;this.textures.length=0;let o;n instanceof $s||n instanceof ys?o=n.getImage():o=n.getData();const a=es(o);if(a){const T=t.createTexture();this.textures.push(T),this.bandCount=4,et(t,T,a,n.interpolate),this.setReady();return}o=ps(o);const l=n.getSize(),c=[l[0]+2*this.gutter_,l[1]+2*this.gutter_],y=o instanceof Float32Array,u=c[0]*c[1],p=y?Float32Array:Uint8Array,i=p.BYTES_PER_ELEMENT,h=o.byteLength/c[1];this.bandCount=Math.floor(h/i/c[0]);const D=Math.ceil(this.bandCount/4);if(D===1){const T=t.createTexture();this.textures.push(T),bs(s,T,o,c,this.bandCount,n.interpolate),this.setReady();return}const C=new Array(D);for(let T=0;T<D;++T){const R=t.createTexture();this.textures.push(R);const E=T<D-1?4:(this.bandCount-1)%4+1;C[T]=new p(u*E)}let b=0,g=0;const w=c[0]*this.bandCount;for(let T=0;T<c[1];++T){for(let R=0;R<w;++R){const E=o[g+R],_=Math.floor(b/this.bandCount),A=R%this.bandCount,m=Math.floor(A/4),S=C[m],U=S.length/u,v=A%4;S[_*U+v]=E,++b}g+=h/i}for(let T=0;T<D;++T){const R=this.textures[T],E=C[T],_=E.length/u;bs(s,R,E,c,_,n.interpolate)}this.setReady()}disposeInternal(){const s=this.helper_.getGL();this.helper_.deleteBuffer(this.coords);for(let t=0;t<this.textures.length;++t)s.deleteTexture(this.textures[t]);this.tile.removeEventListener(q.CHANGE,this.handleTileChange_)}getImagePixelData_(s,t,n){const o=this.gutter_,a=this.renderSize_[0],l=this.renderSize_[1];j||tt(),j.clearRect(0,0,1,1);const c=s.width,y=s.height,u=c-2*o,p=y-2*o,i=o+Math.floor(u*(t/a)),h=o+Math.floor(p*(n/l));let D;try{j.drawImage(s,i,h,1,1,0,0,1,1),D=j.getImageData(0,0,1,1).data}catch{return j=null,null}return D}getArrayPixelData_(s,t,n,o){const a=this.gutter_,l=this.renderSize_[0],c=this.renderSize_[1],y=t[0],u=t[1],p=y+2*a,i=u+2*a,h=a+Math.floor(y*(n/l)),D=a+Math.floor(u*(o/c));if(s instanceof DataView){const b=s.byteLength/(p*i),g=b*(D*p+h),w=s.buffer.slice(g,g+b);return new DataView(w)}const C=this.bandCount*(D*p+h);return s.slice(C,C+this.bandCount)}getPixelData(s,t){if(!this.loaded)return null;if(this.tile instanceof Gs){const n=this.tile.getData(),o=ps(n);if(o){const a=this.tile.getSize();return this.getArrayPixelData_(o,a,s,t)}return this.getImagePixelData_(es(n),s,t)}return this.getImagePixelData_(this.tile.getImage(),s,t)}}const ot=nt,at={TILE_TRANSFORM:"u_tileTransform",TRANSITION_ALPHA:"u_transitionAlpha",DEPTH:"u_depth",RENDER_EXTENT:"u_renderExtent",RESOLUTION:"u_resolution",ZOOM:"u_zoom",GLOBAL_ALPHA:"u_globalAlpha",PROJECTION_MATRIX:"u_projectionMatrix",SCREEN_TO_WORLD_MATRIX:"u_screenToWorldMatrix"},lt={};function rt(e){return 2*(1-1/(e+1))-1}function pt(){return{tileIds:new Set,representationsByZ:{}}}function ws(e,s){return e.tileIds.has(ss(s))}function Ss(e,s,t){const n=e.representationsByZ;t in n||(n[t]=new Set),n[t].add(s),e.tileIds.add(ss(s.tile))}function as(e,s){const t=e.layerStatesArray[e.layerIndex];t.extent&&(s=H(s,Is(t.extent,e.viewState.projection)));const n=t.layer.getRenderSource();if(!n.getWrapX()){const o=n.getTileGridForProjection(e.viewState.projection).getExtent();o&&(s=H(s,o))}return s}function is(e,s){return`${e.getKey()},${rs(s)}`}class it extends Ie{constructor(s,t){super(s,{uniforms:t.uniforms,postProcesses:t.postProcesses}),this.renderComplete=!1,this.tileTransform_=he(),this.tempMat4=$e(),this.tempTileRange_=new Se(0,0,0,0),this.tempTileCoord_=Rs(0,0,0),this.tempSize_=[0,0];const n=t.cacheSize!==void 0?t.cacheSize:512;this.tileRepresentationCache=new Ne(n),this.frameState=null,this.projection_=void 0}reset(s){super.reset({uniforms:s.uniforms})}isDrawableTile_(s){const t=this.getLayer(),n=s.getState(),o=t.getUseInterimTilesOnError();return n==x.LOADED||n==x.EMPTY||n==x.ERROR&&!o}prepareFrameInternal(s){this.projection_?s.viewState.projection!==this.projection_&&(this.clearCache(),this.projection_=s.viewState.projection):this.projection_=s.viewState.projection;const n=this.getLayer().getRenderSource();return!n||fe(as(s,s.extent))?!1:n.getState()==="ready"}createTileRepresentation(s){return vs()}enqueueTiles(s,t,n,o,a){const l=s.viewState,c=this.getLayer(),y=c.getRenderSource(),u=y.getTileGridForProjection(l.projection),p=y.getGutterForProjection(l.projection),i=ss(y);i in s.wantedTiles||(s.wantedTiles[i]={});const h=s.wantedTiles[i],D=this.tileRepresentationCache,C=c.getMapInternal(),b=Math.max(n-a,u.getMinZoom(),u.getZForResolution(Math.min(c.getMaxResolution(),C?C.getView().getResolutionForZoom(Math.max(c.getMinZoom(),0)):u.getResolution(0)),y.zDirection));for(let g=n;g>=b;--g){const w=u.getTileRangeForExtentAndZ(t,g,this.tempTileRange_),T=u.getResolution(g);for(let R=w.minX;R<=w.maxX;++R)for(let E=w.minY;E<=w.maxY;++E){const _=Rs(g,R,E,this.tempTileCoord_),A=is(y,_);let m,S;if(D.containsKey(A)&&(m=D.get(A),S=m.tile),(!m||m.tile.key!==y.getKey())&&(S=y.getTile(g,R,E,s.pixelRatio,l.projection)),ws(o,S))continue;if(!m)m=this.createTileRepresentation({tile:S,grid:u,helper:this.helper,gutter:p}),D.set(A,m);else if(this.isDrawableTile_(S))m.setTile(S);else{const v=S.getInterimTile();m.setTile(v)}Ss(o,m,g);const U=S.getKey();h[U]=!0,S.getState()===x.IDLE&&(s.tileQueue.isKeyQueued(U)||s.tileQueue.enqueue([S,i,u.getTileCoordCenter(_),T]))}}}beforeTilesRender(s,t){this.helper.prepareDraw(this.frameState,!t)}renderTile(s,t,n,o,a,l,c,y,u,p,i){}renderFrame(s){this.frameState=s,this.renderComplete=!0;const t=this.helper.getGL();this.preRender(t,s);const n=s.viewState,o=this.getLayer(),a=o.getRenderSource(),l=a.getTileGridForProjection(n.projection),c=a.getGutterForProjection(n.projection),y=as(s,s.extent),u=l.getZForResolution(n.resolution,a.zDirection),p=pt(),i=o.getPreload();if(s.nextExtent){const _=l.getZForResolution(n.nextResolution,a.zDirection),A=as(s,s.nextExtent);this.enqueueTiles(s,A,_,p,i)}this.enqueueTiles(s,y,u,p,0),i>0&&setTimeout(()=>{this.enqueueTiles(s,y,u-1,p,i-1)},0);const h={},D=ss(this),C=s.time;let b=!1;for(const _ of p.representationsByZ[u]){const A=_.tile;if((A instanceof ys||A instanceof Ps)&&A.getState()===x.EMPTY)continue;const m=A.tileCoord;if(_.loaded){const v=A.getAlpha(D,C);if(v===1){A.endTransition(D);continue}b=!0;const G=rs(m);h[G]=v}if(this.renderComplete=!1,this.findAltTiles_(l,m,u+1,p))continue;const U=l.getMinZoom();for(let v=u-1;v>=U&&!this.findAltTiles_(l,m,v,p);--v);}this.beforeTilesRender(s,b);const g=p.representationsByZ,w=Object.keys(g).map(Number).sort(de);for(let _=0,A=w.length;_<A;++_){const m=w[_];for(const S of g[m]){if(!S.loaded)continue;const v=S.tile.tileCoord,G=rs(v),Y=G in h?h[G]:1;Y<1&&(s.animate=!0);const B=l.getResolution(m),$=us(l.getTileSize(m),this.tempSize_),M=l.getOrigin(m),ns=l.getTileCoordExtent(v),ee=rt(m),V=s.viewState,te=V.center[0],ne=V.center[1],Z=$[0]+2*c,Ds=$[1]+2*c,oe=Z/Ds,ae=(te-M[0])/($[0]*B),le=(M[1]-ne)/($[1]*B),hs=V.resolution/B,re=v[1],pe=v[2];Ce(this.tileTransform_),Ts(this.tileTransform_,2/(s.size[0]*hs/Z),-2/(s.size[1]*hs/Z)),Ae(this.tileTransform_,V.rotation),Ts(this.tileTransform_,1,1/oe),Te(this.tileTransform_,($[0]*(re-ae)-c)/Z,($[1]*(pe-le)-c)/Ds),this.renderTile(S,this.tileTransform_,s,y,B,$,M,ns,ee,c,Y)}}this.helper.finalizeDraw(s,this.dispatchPreComposeEvent,this.dispatchPostComposeEvent);const T=this.helper.getCanvas(),R=this.tileRepresentationCache;for(;R.canExpireCache();)R.pop().dispose();const E=function(_,A){a.updateCacheSize(.1,A.viewState.projection),a.expireCache(A.viewState.projection,lt)};return s.postRenderFunctions.push(E),this.postRender(t,s),T}findAltTiles_(s,t,n,o){const a=s.getTileRangeForTileCoordAndZ(t,n,this.tempTileRange_);if(!a)return!1;let l=!0;const c=this.tileRepresentationCache,y=this.getLayer().getRenderSource();for(let u=a.minX;u<=a.maxX;++u)for(let p=a.minY;p<=a.maxY;++p){const i=is(y,[n,u,p]);let h=!1;if(c.containsKey(i)){const D=c.get(i);D.loaded&&!ws(o,D.tile)&&(Ss(o,D,n),h=!0)}h||(l=!1)}return l}clearCache(){const s=this.tileRepresentationCache;s.forEach(t=>t.dispose()),s.clear()}removeHelper(){this.helper&&this.clearCache(),super.removeHelper()}disposeInternal(){super.disposeInternal(),delete this.frameState}}const ct=it,f={...at,TILE_TEXTURE_ARRAY:"u_tileTextures",TEXTURE_PIXEL_WIDTH:"u_texturePixelWidth",TEXTURE_PIXEL_HEIGHT:"u_texturePixelHeight",TEXTURE_RESOLUTION:"u_textureResolution",TEXTURE_ORIGIN_X:"u_textureOriginX",TEXTURE_ORIGIN_Y:"u_textureOriginY"},Q={TEXTURE_COORD:"a_textureCoord"},ut=[{name:Q.TEXTURE_COORD,size:2,type:Be.FLOAT}];class yt extends ct{constructor(s,t){super(s,t),this.program_,this.vertexShader_=t.vertexShader,this.fragmentShader_=t.fragmentShader,this.indices_=new Ls(Le,Us),this.indices_.fromArray([0,1,3,1,2,3]),this.paletteTextures_=t.paletteTextures||[]}reset(s){super.reset(s),this.vertexShader_=s.vertexShader,this.fragmentShader_=s.fragmentShader,this.helper&&(this.program_=this.helper.getProgram(this.fragmentShader_,this.vertexShader_))}afterHelperCreated(){this.program_=this.helper.getProgram(this.fragmentShader_,this.vertexShader_),this.helper.flushBufferData(this.indices_)}createTileRepresentation(s){return new ot(s)}beforeTilesRender(s,t){super.beforeTilesRender(s,t),this.helper.useProgram(this.program_,s)}renderTile(s,t,n,o,a,l,c,y,u,p,i){const h=this.helper.getGL();this.helper.bindBuffer(s.coords),this.helper.bindBuffer(this.indices_),this.helper.enableAttributes(ut);let D=0;for(;D<s.textures.length;){const A=`${f.TILE_TEXTURE_ARRAY}[${D}]`;this.helper.bindTexture(s.textures[D],D,A),++D}for(let A=0;A<this.paletteTextures_.length;++A){const m=this.paletteTextures_[A],S=m.getTexture(h);this.helper.bindTexture(S,D,m.name),++D}const C=n.viewState,b=l[0]+2*p,g=l[1]+2*p,T=s.tile.tileCoord,R=T[1],E=T[2];this.helper.setUniformMatrixValue(f.TILE_TRANSFORM,Ue(this.tempMat4,t)),this.helper.setUniformFloatValue(f.TRANSITION_ALPHA,i),this.helper.setUniformFloatValue(f.DEPTH,u);let _=o;p>0&&(_=y,H(_,o,_)),this.helper.setUniformFloatVec4(f.RENDER_EXTENT,_),this.helper.setUniformFloatValue(f.RESOLUTION,C.resolution),this.helper.setUniformFloatValue(f.ZOOM,C.zoom),this.helper.setUniformFloatValue(f.TEXTURE_PIXEL_WIDTH,b),this.helper.setUniformFloatValue(f.TEXTURE_PIXEL_HEIGHT,g),this.helper.setUniformFloatValue(f.TEXTURE_RESOLUTION,a),this.helper.setUniformFloatValue(f.TEXTURE_ORIGIN_X,c[0]+R*l[0]*a-p*a),this.helper.setUniformFloatValue(f.TEXTURE_ORIGIN_Y,c[1]-E*l[1]*a+p*a),this.helper.drawElements(0,this.indices_.getSize())}getData(s){if(!this.helper.getGL())return null;const n=this.frameState;if(!n)return null;const o=this.getLayer(),a=Ee(n.pixelToCoordinateTransform,s.slice()),l=n.viewState,c=o.getExtent();if(c&&!Es(Is(c,l.projection),a))return null;const y=o.getSources(_e([a]),l.resolution);let u,p,i;for(u=y.length-1;u>=0;--u)if(p=y[u],p.getState()==="ready"){if(i=p.getTileGridForProjection(l.projection),p.getWrapX())break;const D=i.getExtent();if(!D||Es(D,a))break}if(u<0)return null;const h=this.tileRepresentationCache;for(let D=i.getZForResolution(l.resolution);D>=i.getMinZoom();--D){const C=i.getTileCoordForCoordAndZ(a,D),b=is(p,C);if(!h.containsKey(b))continue;const g=h.get(b),w=g.tile;if((w instanceof ys||w instanceof Ps)&&w.getState()===x.EMPTY)return null;if(!g.loaded)continue;const T=i.getOrigin(D),R=us(i.getTileSize(D)),E=i.getResolution(D),_=(a[0]-T[0])/E-C[1]*R[0],A=(T[1]-a[1])/E-C[2]*R[1];return g.getPixelData(_,A)}return null}disposeInternal(){const s=this.helper;s&&(s.getGL().deleteProgram(this.program_),delete this.program_,s.deleteBuffer(this.indices_)),super.disposeInternal(),delete this.indices_}}const Ft=yt,r={NUMBER:1,STRING:2,COLOR:4,BOOLEAN:8,NUMBER_ARRAY:16,ANY:31,NONE:0};function Dt(e){switch(e){case"string":return r.STRING;case"color":return r.COLOR;case"number":return r.NUMBER;case"boolean":return r.BOOLEAN;case"number[]":return r.NUMBER_ARRAY;default:throw new Error(`Unrecognized type hint: ${e}`)}}const d={};function I(e){if(typeof e=="number")return r.NUMBER;if(typeof e=="boolean")return r.BOOLEAN;if(typeof e=="string")return Re(e)?r.COLOR|r.STRING:r.STRING;if(!Array.isArray(e))throw new Error(`Unhandled value type: ${JSON.stringify(e)}`);const s=e;if(s.every(function(o){return typeof o=="number"}))return s.length===3||s.length===4?r.COLOR|r.NUMBER_ARRAY:r.NUMBER_ARRAY;if(typeof s[0]!="string")throw new Error(`Expected an expression operator but received: ${JSON.stringify(s)}`);const n=d[s[0]];if(n===void 0)throw new Error(`Unrecognized expression operator: ${JSON.stringify(s)}`);return n.getReturnType(s.slice(1))}function ht(e){return Math.log2(e)%1===0}function X(e){const s=[];return(e&r.NUMBER)>0&&s.push("number"),(e&r.COLOR)>0&&s.push("color"),(e&r.BOOLEAN)>0&&s.push("boolean"),(e&r.NUMBER_ARRAY)>0&&s.push("number[]"),(e&r.STRING)>0&&s.push("string"),s.length>0?s.join(", "):"(no type)"}function ts(e){const s=e.toString();return s.includes(".")?s:s+".0"}function zs(e){if(e.length<2||e.length>4)throw new Error("`formatArray` can only output `vec2`, `vec3` or `vec4` arrays.");return`vec${e.length}(${e.map(ts).join(", ")})`}function ft(e){const s=me(e),t=s.length>3?s[3]:1;return zs([s[0]/255*t,s[1]/255*t,s[2]/255*t,t])}function js(e,s){return e.stringLiteralsMap[s]===void 0&&(e.stringLiteralsMap[s]=Object.keys(e.stringLiteralsMap).length),e.stringLiteralsMap[s]}function dt(e,s){return ts(js(e,s))}function F(e,s,t){const n=t!==void 0?t:r.NUMBER;if(Array.isArray(s)&&typeof s[0]=="string"){const a=d[s[0]];if(a===void 0)throw new Error(`Unrecognized expression operator: ${JSON.stringify(s)}`);return a.toGlsl(e,s.slice(1),n)}const o=I(s)&n;if(Ws(s,o,""),(o&r.NUMBER)>0)return ts(s);if((o&r.BOOLEAN)>0)return s.toString();if((o&r.STRING)>0)return dt(e,s.toString());if((o&r.COLOR)>0)return ft(s);if((o&r.NUMBER_ARRAY)>0)return zs(s);throw new Error(`Unexpected expression ${s} (expected type ${X(n)})`)}function qs(e){if(!(I(e)&r.NUMBER))throw new Error(`A numeric value was expected, got ${JSON.stringify(e)} instead`)}function O(e){for(let s=0;s<e.length;s++)qs(e[s])}function Hs(e){if(!(I(e)&r.STRING))throw new Error(`A string value was expected, got ${JSON.stringify(e)} instead`)}function Fs(e){if(!(I(e)&r.BOOLEAN))throw new Error(`A boolean value was expected, got ${JSON.stringify(e)} instead`)}function N(e,s){if(e.length!==s)throw new Error(`Exactly ${s} arguments were expected, got ${e.length} instead`)}function L(e,s){if(e.length<s)throw new Error(`At least ${s} arguments were expected, got ${e.length} instead`)}function W(e,s){if(e.length>s)throw new Error(`At most ${s} arguments were expected, got ${e.length} instead`)}function Ys(e){if(e.length%2!==0)throw new Error(`An even amount of arguments was expected, got ${JSON.stringify(e)} instead`)}function Ct(e){if(e.length%2===0)throw new Error(`An odd amount of arguments was expected, got ${JSON.stringify(e)} instead`)}function Ws(e,s,t){if(s===r.NONE)throw new Error(`No matching type was found for the following expression ${t}: ${JSON.stringify(e)}`)}function k(e,s,t){if(Ws(e,s,t),!ht(s))throw new Error(`Expected to have a unique type for the following expression ${t}: ${JSON.stringify(e)}
Got the following types instead: ${X(s)}`)}function ks(e,s,t,n){if((s&t)===r.NONE)throw new Error(`Expected the ${n} type of the following expression: ${JSON.stringify(e)} to be of the following types: ${X(t)}
Got these types instead: ${X(s)}`)}d.get={getReturnType:function(e){if(e.length===2){const s=e[1];return Dt(s)}return r.ANY},toGlsl:function(e,s,t){L(s,1),W(s,2),Hs(s[0]);const n=t&d.get.getReturnType(s);k(["get",...s],n,"");const o=s[0].toString(),a=e.attributes.find(c=>c.name===o);if(!a)e.attributes.push({name:o,type:n});else if(n!==a.type)throw new Error(`The following attribute was used in different places with incompatible types: ${o}
Types were: ${X(a.type)} and ${X(n)}`);return(e.inFragmentShader?"v_":"a_")+o}};function Vs(e){return"u_var_"+e}d.var={getReturnType:function(){return r.ANY},toGlsl:function(e,s,t){N(s,1),Hs(s[0]);const n=s[0].toString();if(!e.style.variables||e.style.variables[n]===void 0)throw new Error(`The following variable is missing from the style: ${n}`);const o=e.style.variables[n],a=t&I(o);k(["var",...s],a,"");const l=e.variables.find(c=>c.name===n);if(!l)e.variables.push({name:n,type:a});else if(a!==l.type)throw new Error(`The following variable was used in different places with incompatible types: ${n}
Types were: ${X(l.type)} and ${X(a)}`);return Vs(n)}};const Zs="u_paletteTextures";d.palette={getReturnType:function(){return r.COLOR},toGlsl:function(e,s){N(s,2),qs(s[0]);const t=F(e,s[0]),n=s[1];if(!Array.isArray(n))throw new Error("The second argument of palette must be an array");const o=n.length,a=new Uint8Array(o*4);for(let y=0;y<o;y++){const u=n[y];let p;if(typeof u=="string")p=ge(u);else{if(!Array.isArray(u))throw new Error("The second argument of palette must be an array of strings or colors");const h=u.length;if(h===4)p=u;else{if(h!==3)throw new Error(`Expected palette color to have 3 or 4 values, got ${h}`);p=[u[0],u[1],u[2],1]}}const i=y*4;a[i]=p[0],a[i+1]=p[1],a[i+2]=p[2],a[i+3]=p[3]*255}e.paletteTextures||(e.paletteTextures=[]);const l=`${Zs}[${e.paletteTextures.length}]`,c=new ke(l,a);return e.paletteTextures.push(c),`texture2D(${l}, vec2((${t} + 0.5) / ${o}.0, 0.5))`}};const ls="getBandValue";d.band={getReturnType:function(){return r.NUMBER},toGlsl:function(e,s){L(s,1),W(s,3);const t=s[0];if(!(ls in e.functions)){let l="";const c=e.bandCount||1;for(let y=0;y<c;y++){const u=Math.floor(y/4);let p=y%4;y===c-1&&p===1&&(p=3);const i=`${f.TILE_TEXTURE_ARRAY}[${u}]`;l+=`
          if (band == ${y+1}.0) {
            return texture2D(${i}, v_textureCoord + vec2(dx, dy))[${p}];
          }
        `}e.functions[ls]=`
        float getBandValue(float band, float xOffset, float yOffset) {
          float dx = xOffset / ${f.TEXTURE_PIXEL_WIDTH};
          float dy = yOffset / ${f.TEXTURE_PIXEL_HEIGHT};
          ${l}
        }
      `}const n=F(e,t),o=F(e,s[1]||0),a=F(e,s[2]||0);return`${ls}(${n}, ${o}, ${a})`}};d.time={getReturnType:function(){return r.NUMBER},toGlsl:function(e,s){return N(s,0),"u_time"}};d.zoom={getReturnType:function(){return r.NUMBER},toGlsl:function(e,s){return N(s,0),"u_zoom"}};d.resolution={getReturnType:function(){return r.NUMBER},toGlsl:function(e,s){return N(s,0),"u_resolution"}};d["*"]={getReturnType:function(e){let s=r.NUMBER|r.COLOR;for(let t=0;t<e.length;t++)s=s&I(e[t]);return s},toGlsl:function(e,s,t){L(s,2);let n=t;for(let o=0;o<s.length;o++)n=n&I(s[o]);return ks(s,n,r.NUMBER|r.COLOR,"output"),`(${s.map(o=>F(e,o,n)).join(" * ")})`}};d["/"]={getReturnType:function(){return r.NUMBER},toGlsl:function(e,s){return N(s,2),O(s),`(${F(e,s[0])} / ${F(e,s[1])})`}};d["+"]={getReturnType:function(){return r.NUMBER},toGlsl:function(e,s){return L(s,2),O(s),`(${s.map(t=>F(e,t)).join(" + ")})`}};d["-"]={getReturnType:function(){return r.NUMBER},toGlsl:function(e,s){return N(s,2),O(s),`(${F(e,s[0])} - ${F(e,s[1])})`}};d.clamp={getReturnType:function(){return r.NUMBER},toGlsl:function(e,s){N(s,3),O(s);const t=F(e,s[1]),n=F(e,s[2]);return`clamp(${F(e,s[0])}, ${t}, ${n})`}};d["%"]={getReturnType:function(){return r.NUMBER},toGlsl:function(e,s){return N(s,2),O(s),`mod(${F(e,s[0])}, ${F(e,s[1])})`}};d["^"]={getReturnType:function(){return r.NUMBER},toGlsl:function(e,s){return N(s,2),O(s),`pow(${F(e,s[0])}, ${F(e,s[1])})`}};d.abs={getReturnType:function(){return r.NUMBER},toGlsl:function(e,s){return N(s,1),O(s),`abs(${F(e,s[0])})`}};d.floor={getReturnType:function(){return r.NUMBER},toGlsl:function(e,s){return N(s,1),O(s),`floor(${F(e,s[0])})`}};d.round={getReturnType:function(){return r.NUMBER},toGlsl:function(e,s){return N(s,1),O(s),`floor(${F(e,s[0])} + 0.5)`}};d.ceil={getReturnType:function(){return r.NUMBER},toGlsl:function(e,s){return N(s,1),O(s),`ceil(${F(e,s[0])})`}};d.sin={getReturnType:function(){return r.NUMBER},toGlsl:function(e,s){return N(s,1),O(s),`sin(${F(e,s[0])})`}};d.cos={getReturnType:function(){return r.NUMBER},toGlsl:function(e,s){return N(s,1),O(s),`cos(${F(e,s[0])})`}};d.atan={getReturnType:function(){return r.NUMBER},toGlsl:function(e,s){return L(s,1),W(s,2),O(s),s.length===2?`atan(${F(e,s[0])}, ${F(e,s[1])})`:`atan(${F(e,s[0])})`}};d[">"]={getReturnType:function(){return r.BOOLEAN},toGlsl:function(e,s){return N(s,2),O(s),`(${F(e,s[0])} > ${F(e,s[1])})`}};d[">="]={getReturnType:function(){return r.BOOLEAN},toGlsl:function(e,s){return N(s,2),O(s),`(${F(e,s[0])} >= ${F(e,s[1])})`}};d["<"]={getReturnType:function(){return r.BOOLEAN},toGlsl:function(e,s){return N(s,2),O(s),`(${F(e,s[0])} < ${F(e,s[1])})`}};d["<="]={getReturnType:function(){return r.BOOLEAN},toGlsl:function(e,s){return N(s,2),O(s),`(${F(e,s[0])} <= ${F(e,s[1])})`}};function Ks(e){return{getReturnType:function(){return r.BOOLEAN},toGlsl:function(s,t){N(t,2);let n=r.ANY;for(let o=0;o<t.length;o++)n&=I(t[o]);if(n===r.NONE)throw new Error(`All arguments should be of compatible type, got ${JSON.stringify(t)} instead`);return n&=~r.COLOR,`(${F(s,t[0],n)} ${e} ${F(s,t[1],n)})`}}}d["=="]=Ks("==");d["!="]=Ks("!=");d["!"]={getReturnType:function(){return r.BOOLEAN},toGlsl:function(e,s){return N(s,1),Fs(s[0]),`(!${F(e,s[0],r.BOOLEAN)})`}};function Js(e){return{getReturnType:function(){return r.BOOLEAN},toGlsl:function(s,t){L(t,2);for(let o=0;o<t.length;o++)Fs(t[o]);let n=t.map(o=>F(s,o,r.BOOLEAN)).join(` ${e} `);return n=`(${n})`,n}}}d.all=Js("&&");d.any=Js("||");d.between={getReturnType:function(){return r.BOOLEAN},toGlsl:function(e,s){N(s,3),O(s);const t=F(e,s[1]),n=F(e,s[2]),o=F(e,s[0]);return`(${o} >= ${t} && ${o} <= ${n})`}};d.array={getReturnType:function(){return r.NUMBER_ARRAY},toGlsl:function(e,s){L(s,2),W(s,4),O(s);const t=s.map(function(n){return F(e,n)});return`vec${s.length}(${t.join(", ")})`}};d.color={getReturnType:function(){return r.COLOR},toGlsl:function(e,s){L(s,3),W(s,4),O(s);const t=s.slice(0,3).map(o=>`${F(e,o)} / 255.0`);return s.length===3?`vec4(${t.join(", ")}, 1.0)`:`(${F(e,s[3])} * vec4(${t.join(", ")}, 1.0))`}};d.interpolate={getReturnType:function(e){let s=r.COLOR|r.NUMBER;for(let t=3;t<e.length;t+=2)s=s&I(e[t]);return s},toGlsl:function(e,s,t){Ys(s),L(s,6);const n=s[0];let o;switch(n[0]){case"linear":o=1;break;case"exponential":o=n[1];break;default:o=null}if(!o)throw new Error(`Invalid interpolation type for "interpolate" operator, received: ${JSON.stringify(n)}`);const a=r.NUMBER,l=d.interpolate.getReturnType(s)&t;k(["interpolate",...s],l,"output");const c=F(e,s[1],a),y=ts(o);let u="";for(let p=2;p<s.length-2;p+=2){const i=F(e,s[p],a),h=u||F(e,s[p+1],l),D=F(e,s[p+2],a),C=F(e,s[p+3],l);u=`mix(${h}, ${C}, pow(clamp((${c} - ${i}) / (${D} - ${i}), 0.0, 1.0), ${y}))`}return u}};d.match={getReturnType:function(e){let s=r.ANY;for(let t=2;t<e.length;t+=2)s=s&I(e[t]);return s=s&I(e[e.length-1]),s},toGlsl:function(e,s,t){Ys(s),L(s,4);let n=I(s[0]);for(let y=1;y<s.length-1;y+=2)n=n&I(s[y]);ks(["match",...s],n,r.STRING|r.NUMBER|r.BOOLEAN,"input"),n=(r.STRING|r.NUMBER|r.BOOLEAN)&n;const o=d.match.getReturnType(s)&t;k(["match",...s],o,"output");const a=F(e,s[0],n),l=F(e,s[s.length-1],o);let c=null;for(let y=s.length-3;y>=1;y-=2){const u=F(e,s[y],n),p=F(e,s[y+1],o);c=`(${a} == ${u} ? ${p} : ${c||l})`}return c}};d.case={getReturnType:function(e){let s=r.ANY;for(let t=1;t<e.length;t+=2)s=s&I(e[t]);return s=s&I(e[e.length-1]),s},toGlsl:function(e,s,t){Ct(s),L(s,3);const n=d.case.getReturnType(s)&t;k(["case",...s],n,"output");for(let l=0;l<s.length-1;l+=2)Fs(s[l]);const o=F(e,s[s.length-1],n);let a=null;for(let l=s.length-3;l>=0;l-=2){const c=F(e,s[l],r.BOOLEAN),y=F(e,s[l+1],n);a=`(${c} ? ${y} : ${a||o})`}return a}};function Ns(e,s){const t=`
    attribute vec2 ${Q.TEXTURE_COORD};
    uniform mat4 ${f.TILE_TRANSFORM};
    uniform float ${f.TEXTURE_PIXEL_WIDTH};
    uniform float ${f.TEXTURE_PIXEL_HEIGHT};
    uniform float ${f.TEXTURE_RESOLUTION};
    uniform float ${f.TEXTURE_ORIGIN_X};
    uniform float ${f.TEXTURE_ORIGIN_Y};
    uniform float ${f.DEPTH};

    varying vec2 v_textureCoord;
    varying vec2 v_mapCoord;

    void main() {
      v_textureCoord = ${Q.TEXTURE_COORD};
      v_mapCoord = vec2(
        ${f.TEXTURE_ORIGIN_X} + ${f.TEXTURE_RESOLUTION} * ${f.TEXTURE_PIXEL_WIDTH} * v_textureCoord[0],
        ${f.TEXTURE_ORIGIN_Y} - ${f.TEXTURE_RESOLUTION} * ${f.TEXTURE_PIXEL_HEIGHT} * v_textureCoord[1]
      );
      gl_Position = ${f.TILE_TRANSFORM} * vec4(${Q.TEXTURE_COORD}, ${f.DEPTH}, 1.0);
    }
  `,n={inFragmentShader:!0,variables:[],attributes:[],stringLiteralsMap:{},functions:{},bandCount:s,style:e},o=[];if(e.color!==void 0){const i=F(n,e.color,r.COLOR);o.push(`color = ${i};`)}if(e.contrast!==void 0){const i=F(n,e.contrast,r.NUMBER);o.push(`color.rgb = clamp((${i} + 1.0) * color.rgb - (${i} / 2.0), vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0));`)}if(e.exposure!==void 0){const i=F(n,e.exposure,r.NUMBER);o.push(`color.rgb = clamp((${i} + 1.0) * color.rgb, vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0));`)}if(e.saturation!==void 0){const i=F(n,e.saturation,r.NUMBER);o.push(`
      float saturation = ${i} + 1.0;
      float sr = (1.0 - saturation) * 0.2126;
      float sg = (1.0 - saturation) * 0.7152;
      float sb = (1.0 - saturation) * 0.0722;
      mat3 saturationMatrix = mat3(
        sr + saturation, sr, sr,
        sg, sg + saturation, sg,
        sb, sb, sb + saturation
      );
      color.rgb = clamp(saturationMatrix * color.rgb, vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0));
    `)}if(e.gamma!==void 0){const i=F(n,e.gamma,r.NUMBER);o.push(`color.rgb = pow(color.rgb, vec3(1.0 / ${i}));`)}if(e.brightness!==void 0){const i=F(n,e.brightness,r.NUMBER);o.push(`color.rgb = clamp(color.rgb + ${i}, vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0));`)}const a={},l=n.variables.length;if(l>1&&!e.variables)throw new Error(`Missing variables in style (expected ${n.variables})`);for(let i=0;i<l;++i){const h=n.variables[i];if(!(h.name in e.variables))throw new Error(`Missing '${h.name}' in style variables`);const D=Vs(h.name);a[D]=function(){let C=e.variables[h.name];return typeof C=="string"&&(C=js(n,C)),C!==void 0?C:-9999999}}const c=Object.keys(a).map(function(i){return`uniform float ${i};`}),y=Math.ceil(s/4);c.push(`uniform sampler2D ${f.TILE_TEXTURE_ARRAY}[${y}];`),n.paletteTextures&&c.push(`uniform sampler2D ${Zs}[${n.paletteTextures.length}];`);const u=Object.keys(n.functions).map(function(i){return n.functions[i]}),p=`
    #ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
    #else
    precision mediump float;
    #endif

    varying vec2 v_textureCoord;
    varying vec2 v_mapCoord;
    uniform vec4 ${f.RENDER_EXTENT};
    uniform float ${f.TRANSITION_ALPHA};
    uniform float ${f.TEXTURE_PIXEL_WIDTH};
    uniform float ${f.TEXTURE_PIXEL_HEIGHT};
    uniform float ${f.RESOLUTION};
    uniform float ${f.ZOOM};

    ${c.join(`
`)}

    ${u.join(`
`)}

    void main() {
      if (
        v_mapCoord[0] < ${f.RENDER_EXTENT}[0] ||
        v_mapCoord[1] < ${f.RENDER_EXTENT}[1] ||
        v_mapCoord[0] > ${f.RENDER_EXTENT}[2] ||
        v_mapCoord[1] > ${f.RENDER_EXTENT}[3]
      ) {
        discard;
      }

      vec4 color = texture2D(${f.TILE_TEXTURE_ARRAY}[0],  v_textureCoord);

      ${o.join(`
`)}

      if (color.a == 0.0) {
        discard;
      }

      gl_FragColor = color;
      gl_FragColor.rgb *= gl_FragColor.a;
      gl_FragColor *= ${f.TRANSITION_ALPHA};
    }`;return{vertexShader:t,fragmentShader:p,uniforms:a,paletteTextures:n.paletteTextures}}class Qs extends Oe{constructor(s){s=s?Object.assign({},s):{};const t=s.style||{};delete s.style;const n=s.cacheSize;delete s.cacheSize,super(s),this.sources_=s.sources,this.renderedSource_=null,this.renderedResolution_=NaN,this.style_=t,this.cacheSize_=n,this.styleVariables_=this.style_.variables||{},this.addChangeListener(xe.SOURCE,this.handleSourceUpdate_)}getSources(s,t){const n=this.getSource();return this.sources_?typeof this.sources_=="function"?this.sources_(s,t):this.sources_:n?[n]:[]}getRenderSource(){return this.renderedSource_||this.getSource()}getSourceState(){const s=this.getRenderSource();return s?s.getState():"undefined"}handleSourceUpdate_(){this.hasRenderer()&&this.getRenderer().clearCache(),this.getSource()&&this.setStyle(this.style_)}getSourceBandCount_(){const s=Number.MAX_SAFE_INTEGER,t=this.getSources([-s,-s,s,s],s);return t&&t.length&&"bandCount"in t[0]?t[0].bandCount:4}createRenderer(){const s=Ns(this.style_,this.getSourceBandCount_());return new Ft(this,{vertexShader:s.vertexShader,fragmentShader:s.fragmentShader,uniforms:s.uniforms,cacheSize:this.cacheSize_,paletteTextures:s.paletteTextures})}renderSources(s,t){const n=this.getRenderer();let o;for(let a=0,l=t.length;a<l;++a)this.renderedSource_=t[a],n.prepareFrame(s)&&(o=n.renderFrame(s));return o}render(s,t){this.rendered=!0;const n=s.viewState,o=this.getSources(s.extent,n.resolution);let a=!0;for(let c=0,y=o.length;c<y;++c){const u=o[c],p=u.getState();if(p=="loading"){const i=()=>{u.getState()=="ready"&&(u.removeEventListener("change",i),this.changed())};u.addEventListener("change",i)}a=a&&p=="ready"}const l=this.renderSources(s,o);if(this.getRenderer().renderComplete&&a)return this.renderedResolution_=n.resolution,l;if(this.renderedResolution_>.5*n.resolution){const c=this.getSources(s.extent,this.renderedResolution_).filter(y=>!o.includes(y));if(c.length>0)return this.renderSources(s,c)}return l}setStyle(s){this.styleVariables_=s.variables||{},this.style_=s;const t=Ns(this.style_,this.getSourceBandCount_());this.getRenderer().reset({vertexShader:t.vertexShader,fragmentShader:t.fragmentShader,uniforms:t.uniforms}),this.changed()}updateStyleVariables(s){Object.assign(this.styleVariables_,s),this.changed()}}Qs.prototype.dispose;const Os=Qs,se=e=>(Xe("data-v-fa4250d0"),e=e(),ze(),e),At={class:"mapBox"},Tt=se(()=>P("div",{class:"map",id:"canvasMap"},[P("div",{class:"title"},"Canvas")],-1)),Et=se(()=>P("div",{class:"map",id:"webglMap"},[P("div",{class:"title"},"WebGL")],-1)),_t=[Tt,Et],gt=Me({__name:"index",setup(e){let s=null,t=null;const n=()=>{s=new _s({layers:[new ms({source:new J({attributions:K,url:"http://t0.tianditu.com/DataServer?T=vec_w&x={x}&y={y}&l={z}&tk=3bc6874f2b919aa581635abab7759a3f",wrapX:!1})}),new ms({source:new J({attributions:K,url:"http://t0.tianditu.com/DataServer?T=cva_w&x={x}&y={y}&l={z}&tk=3bc6874f2b919aa581635abab7759a3f",wrapX:!1})})],target:"canvasMap",view:new be({center:[12723048,3575638],minZoom:2,zoom:6}),controls:gs().extend([new xs])}),t=new _s({layers:[new Os({source:new J({attributions:K,url:"http://t0.tianditu.com/DataServer?T=img_w&x={x}&y={y}&l={z}&tk=3bc6874f2b919aa581635abab7759a3f",crossOrigin:"anonymous",wrapX:!1})}),new Os({source:new J({attributions:K,url:"http://t0.tianditu.com/DataServer?T=cva_w&x={x}&y={y}&l={z}&tk=3bc6874f2b919aa581635abab7759a3f",crossOrigin:"anonymous",wrapX:!1})})],target:"webglMap",view:s.getView(),controls:gs().extend([new xs])})};return Ge(()=>{n()}),Pe(()=>{s&&(s.dispose(),s=null),t&&(t.dispose(),t=null)}),(o,a)=>(Bs(),Ms("div",At,_t))}});const Rt=je(gt,[["__scopeId","data-v-fa4250d0"]]),mt=P("h1",{id:"视图联动",tabindex:"-1"},[He("视图联动 "),P("a",{class:"header-anchor",href:"#视图联动","aria-label":'Permalink to "视图联动"'},"​")],-1),xt=P("div",{class:"tip custom-block"},[P("p",{class:"custom-block-title"},"TIP"),P("p",null,"视图联动。")],-1),bt=Ye(`<h2 id="代码如下" tabindex="-1">代码如下: <a class="header-anchor" href="#代码如下" aria-label="Permalink to &quot;代码如下:&quot;">​</a></h2><details class="details custom-block"><summary>点我查看代码</summary><div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">mapBox</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">map</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">id</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">canvasMap</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">title</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">Canvas</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">map</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">id</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">webglMap</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">title</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">WebGL</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">lang</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">ts</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">setup</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">onMounted</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">onBeforeUnmount</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">vue</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Map</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">View</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">ol</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Tile</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">as</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">TileLayer</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">WebGLTile</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">ol/layer</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">defaults</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">FullScreen</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">ol/control</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">XYZ</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">ol/source</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">ATTRIBUTIONS</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">../../../constants</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> canvasMap</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Map</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">null</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">null;</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> webglMap</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Map</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">null</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">null;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> initMap </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">//加载canvas渲染模式的地图做为主图,默认是canvas渲染模式</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">canvasMap</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">new</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">Map</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    layers</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> [</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">new</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">TileLayer</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        source</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">new</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">XYZ</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">          attributions</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">ATTRIBUTIONS</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">          url</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">http://t0.tianditu.com/DataServer?T=vec_w&amp;x={x}&amp;y={y}&amp;l={z}&amp;tk=3bc6874f2b919aa581635abab7759a3f</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">          wrapX</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FF9CAC;">false</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">new</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">TileLayer</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        source</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">new</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">XYZ</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">          attributions</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">ATTRIBUTIONS</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">          url</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">http://t0.tianditu.com/DataServer?T=cva_w&amp;x={x}&amp;y={y}&amp;l={z}&amp;tk=3bc6874f2b919aa581635abab7759a3f</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">          wrapX</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FF9CAC;">false</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">    ]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">    target</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">canvasMap</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">//地图容器div的ID</span></span>
<span class="line"><span style="color:#F07178;">    view</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">new</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">View</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      center</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> [</span><span style="color:#F78C6C;">12723048</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">3575638</span><span style="color:#F07178;">]</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">//地图初始中心点</span></span>
<span class="line"><span style="color:#F07178;">      minZoom</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">      zoom</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">6</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">//加载控件到地图容器中</span></span>
<span class="line"><span style="color:#F07178;">    controls</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">defaults</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">extend</span><span style="color:#F07178;">([</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">new</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">FullScreen</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">//加载全屏显示控件（目前支持非IE内核浏览器）</span></span>
<span class="line"><span style="color:#F07178;">    ])</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">webglMap</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">new</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">Map</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    layers</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> [</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">new</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">WebGLTile</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        source</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">new</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">XYZ</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">          attributions</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">ATTRIBUTIONS</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">          url</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">http://t0.tianditu.com/DataServer?T=img_w&amp;x={x}&amp;y={y}&amp;l={z}&amp;tk=3bc6874f2b919aa581635abab7759a3f</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">          crossOrigin</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">anonymous</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">          wrapX</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FF9CAC;">false</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">new</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">WebGLTile</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        source</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">new</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">XYZ</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">          attributions</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">ATTRIBUTIONS</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">          url</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">http://t0.tianditu.com/DataServer?T=cva_w&amp;x={x}&amp;y={y}&amp;l={z}&amp;tk=3bc6874f2b919aa581635abab7759a3f</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">          crossOrigin</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">anonymous</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">          wrapX</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FF9CAC;">false</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">    ]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">    target</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">webglMap</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">//地图容器div的ID</span></span>
<span class="line"><span style="color:#F07178;">    view</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">canvasMap</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getView</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">//设置为主图的视图对象</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">//加载控件到地图容器中</span></span>
<span class="line"><span style="color:#F07178;">    controls</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">defaults</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">extend</span><span style="color:#F07178;">([</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">new</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">FullScreen</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">//加载全屏显示控件（目前支持非IE内核浏览器）</span></span>
<span class="line"><span style="color:#F07178;">    ])</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#82AAFF;">onMounted</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">initMap</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">onBeforeUnmount</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">canvasMap</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">canvasMap</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">dispose</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">canvasMap</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">null;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">webglMap</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">webglMap</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">dispose</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">webglMap</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">null;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">&lt;!-- Add &quot;scoped&quot; attribute to limit CSS to this component only --&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">style</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">scoped</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">mapBox</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">height</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">650px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">display</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> flex</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">justify-content</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> space-around</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">flex-direction</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> column</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">padding</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">20px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">box-sizing</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> border-box</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">map</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">position</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> relative</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">width</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">100%</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">height</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">48%</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">border</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2px</span><span style="color:#A6ACCD;"> dashed red</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">box-shadow</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">10px</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">#</span><span style="color:#A6ACCD;">000</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">title</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">width</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">200px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">position</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> absolute</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">bottom</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">10px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">left</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">50%</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">transform</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">translateX</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">-50%</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">z-index</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">color</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> red</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">text-align</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> center</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">style</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div></details>`,2),Ut=JSON.parse('{"title":"视图联动","description":"","frontmatter":{},"headers":[],"relativePath":"open-layers/others/multi-view-linkage/index.md","filePath":"open-layers/others/multi-view-linkage/index.md","lastUpdated":1687662745000}'),wt={name:"open-layers/others/multi-view-linkage/index.md"},Bt=Object.assign(wt,{setup(e){return(s,t)=>(Bs(),Ms("div",null,[mt,xt,qe(Rt),bt]))}});export{Ut as __pageData,Bt as default};
