import{_ as e,o,c as t,O as i}from"./chunks/framework.57763b9a.js";const m=JSON.parse('{"title":"Vue3介绍","description":"","frontmatter":{},"headers":[],"relativePath":"pro-vue3/introduce/introduce/index.md","filePath":"pro-vue3/introduce/introduce/index.md","lastUpdated":1688802289000}'),c={name:"pro-vue3/introduce/introduce/index.md"},a=i('<h1 id="vue3介绍" tabindex="-1">Vue3介绍 <a class="header-anchor" href="#vue3介绍" aria-label="Permalink to &quot;Vue3介绍&quot;">​</a></h1><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>vue3.0 向下兼容 vue2.x 版本，优化了主要核心<code>双向绑定原理</code>和<code>体积大小</code>，并且更加友好的兼容 <code>ts 语法</code>。</p></div><h2 id="_1-性能方面" tabindex="-1">1. 性能方面 <a class="header-anchor" href="#_1-性能方面" aria-label="Permalink to &quot;1. 性能方面&quot;">​</a></h2><ol><li>打包大小减少，创建项目，默认使用 <code>Vite打包</code></li><li>初次渲染快 , 更新渲染快</li><li>内存减少</li></ol><h2 id="_2-源码方面-vue3优势" tabindex="-1">2. 源码方面(Vue3优势) <a class="header-anchor" href="#_2-源码方面-vue3优势" aria-label="Permalink to &quot;2. 源码方面(Vue3优势)&quot;">​</a></h2><ol><li>移除一些冷门 API，比如 <code>filter</code>、<code>inline-template</code> 等，体积减少</li><li>引入 <code>tree-shaking</code> 减少打包体积（通过编译阶段的静态分析，找到没有引入的模块并打上标记，并且移除）</li><li>使用 <code>Proxy</code> 代替 <code>defineProperty</code> 实现响应式。</li><li>Vue3 可以更好的支持 <code>TypeScript</code></li><li>Composition API（<code>组合 API</code>）可以按需使用，多余勾子配置不用再次打包。</li></ol>',6),d=[a];function l(r,n,s,u,_,p){return o(),t("div",null,d)}const f=e(c,[["render",l]]);export{m as __pageData,f as default};
